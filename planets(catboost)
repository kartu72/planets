{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import shap\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import mlflow\n",
    "from sklearn.metrics import classification_report, roc_auc_score, accuracy_score, f1_score, make_scorer\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.svm import SVC\n",
    "from catboost import CatBoostClassifier\n",
    "from sklearn.impute import KNNImputer\n",
    "from xgboost import XGBClassifier\n",
    "from sklearn.model_selection import cross_validate\n",
    "from sklearn.utils import shuffle\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.pipeline import make_pipeline\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.cluster import KMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data=shuffle(pd.read_csv('train.csv'))\n",
    "val_data=shuffle(pd.read_csv('val.csv'))\n",
    "unlabeled_data=shuffle(pd.read_csv('unlabeled_v2.csv'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data=train_data[:5000]\n",
    "val_data=val_data[:10000]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### scorer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "f1 = make_scorer(f1_score , average='macro')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data exploring"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 3 artists>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 144x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "names = ['galaxy', 'star', 'quasar']\n",
    "counts = train_data['class'].value_counts([0,1,2])\n",
    "plt.figure(figsize=(2, 5))\n",
    "plt.ylabel('Quantity')\n",
    "plt.bar(names, counts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### train_data balanced"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "h = train_data['dec'].hist()\n",
    "fig = h.get_figure()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "h = val_data['dec'].hist()\n",
    "fig = h.get_figure()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### как видим огромная часть val_data.dec лежит в диапазоне  от 30 до 70; в train_data почти все значения dec лежат возле 0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def preprocessing(data: pd.DataFrame):\n",
    "    f = 'class' in data\n",
    "    if f:\n",
    "        labels=data['class']\n",
    "        data=data.drop(columns='class')\n",
    "    data=data.apply(pd.to_numeric)\n",
    "    data=data.drop(columns=['objid', 'ra', 'dec', 'clean'])\n",
    "    #data=data.drop(columns=['objid'])\n",
    "    if f:\n",
    "        return (data, labels)\n",
    "    else:\n",
    "        return data\n",
    "\n",
    "def null_processing(data: pd.DataFrame)  ->  pd.DataFrame:\n",
    "    data=data.replace({'na':np.NaN})\n",
    "    data.fillna(data.median(), inplace=True)\n",
    "    return data\n",
    "\n",
    "def null_knn(data: pd.DataFrame)  ->  pd.DataFrame:\n",
    "    data=data.replace({'na':np.NaN})\n",
    "    imputer = KNNImputer(n_neighbors=30,metric='nan_euclidean')\n",
    "    data = pd.DataFrame(imputer.fit_transform(data),columns = data.columns)\n",
    "    return data\n",
    "\n",
    "def predict_info(predict):\n",
    "    a0=0\n",
    "    a1=0\n",
    "    a2=0\n",
    "    for j in predict:\n",
    "        if j==0:\n",
    "            a0+=1\n",
    "        elif j==1:\n",
    "            a1+=1\n",
    "        elif j==2:\n",
    "            a2+=1\n",
    "    print(a0,a1,a2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Clustering1(data: pd.DataFrame, train_data: pd.DataFrame)->pd.DataFrame:\n",
    "    for band in ['u','g','r','i','z']:\n",
    "        columns = []\n",
    "        for i in range(6):\n",
    "            s=band+'_'+str(i)\n",
    "            columns.append(s)\n",
    "        cluster_name='cluster_'+band\n",
    "        model = KMeans(n_clusters = 10, random_state = 42)\n",
    "        model.fit(train_data[columns])\n",
    "        data[cluster_name]=model.predict(data[columns])\n",
    "    return data\n",
    "\n",
    "def Clustering2(data: pd.DataFrame, train_data: pd.DataFrame)->pd.DataFrame:\n",
    "    for i in range(6):\n",
    "        columns = []\n",
    "        for band in ['u','g','r','i','z']:\n",
    "            s=band+'_'+str(i)\n",
    "            columns.append(s)\n",
    "        cluster_name='cluster_'+str(i)\n",
    "        model = KMeans(n_clusters = 10, random_state = 42)\n",
    "        model.fit(train_data[columns])\n",
    "        data[cluster_name]=model.predict(data[columns])\n",
    "    return data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Null processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#unlabeled_data=null_processing(unlabeled_data)\n",
    "#train_data=null_processing(train_data)\n",
    "#val_data=null_processing(val_data)\n",
    "\n",
    "unlabeled_data=null_knn(unlabeled_data)\n",
    "train_data=null_knn(train_data)\n",
    "val_data=null_knn(val_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>objid</th>\n",
       "      <th>ra</th>\n",
       "      <th>dec</th>\n",
       "      <th>u_0</th>\n",
       "      <th>g_0</th>\n",
       "      <th>r_0</th>\n",
       "      <th>i_0</th>\n",
       "      <th>z_0</th>\n",
       "      <th>clean</th>\n",
       "      <th>rowc</th>\n",
       "      <th>...</th>\n",
       "      <th>g_5</th>\n",
       "      <th>r_5</th>\n",
       "      <th>i_5</th>\n",
       "      <th>z_5</th>\n",
       "      <th>u_6</th>\n",
       "      <th>g_6</th>\n",
       "      <th>r_6</th>\n",
       "      <th>i_6</th>\n",
       "      <th>z_6</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>30056.0</td>\n",
       "      <td>58.693860</td>\n",
       "      <td>-4.705502</td>\n",
       "      <td>17.906760</td>\n",
       "      <td>21.258917</td>\n",
       "      <td>15.081190</td>\n",
       "      <td>14.56337</td>\n",
       "      <td>14.16487</td>\n",
       "      <td>1.0</td>\n",
       "      <td>80.87382</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.113362</td>\n",
       "      <td>-0.104191</td>\n",
       "      <td>0.013575</td>\n",
       "      <td>-0.086615</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>88988.0</td>\n",
       "      <td>156.824490</td>\n",
       "      <td>0.283384</td>\n",
       "      <td>17.574530</td>\n",
       "      <td>16.385950</td>\n",
       "      <td>16.489780</td>\n",
       "      <td>16.61654</td>\n",
       "      <td>16.73915</td>\n",
       "      <td>1.0</td>\n",
       "      <td>469.16510</td>\n",
       "      <td>...</td>\n",
       "      <td>0.029043</td>\n",
       "      <td>-0.014913</td>\n",
       "      <td>-0.004570</td>\n",
       "      <td>0.026165</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>38763.0</td>\n",
       "      <td>158.577400</td>\n",
       "      <td>8.119606</td>\n",
       "      <td>21.701020</td>\n",
       "      <td>19.969390</td>\n",
       "      <td>22.168060</td>\n",
       "      <td>24.86762</td>\n",
       "      <td>18.85969</td>\n",
       "      <td>0.0</td>\n",
       "      <td>624.67590</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.012575</td>\n",
       "      <td>-0.106629</td>\n",
       "      <td>0.344812</td>\n",
       "      <td>0.821800</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>50983.0</td>\n",
       "      <td>22.547143</td>\n",
       "      <td>38.914431</td>\n",
       "      <td>23.205320</td>\n",
       "      <td>23.693740</td>\n",
       "      <td>19.647354</td>\n",
       "      <td>22.09022</td>\n",
       "      <td>23.62659</td>\n",
       "      <td>1.0</td>\n",
       "      <td>504.38990</td>\n",
       "      <td>...</td>\n",
       "      <td>0.062271</td>\n",
       "      <td>-0.068304</td>\n",
       "      <td>0.188028</td>\n",
       "      <td>-2.269322</td>\n",
       "      <td>3.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>96748.0</td>\n",
       "      <td>157.409766</td>\n",
       "      <td>-0.728309</td>\n",
       "      <td>22.204771</td>\n",
       "      <td>20.575680</td>\n",
       "      <td>20.158960</td>\n",
       "      <td>20.01624</td>\n",
       "      <td>20.07253</td>\n",
       "      <td>1.0</td>\n",
       "      <td>442.46900</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.014730</td>\n",
       "      <td>-0.002393</td>\n",
       "      <td>-0.041777</td>\n",
       "      <td>-0.085092</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 44 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     objid          ra        dec        u_0        g_0        r_0       i_0  \\\n",
       "0  30056.0   58.693860  -4.705502  17.906760  21.258917  15.081190  14.56337   \n",
       "1  88988.0  156.824490   0.283384  17.574530  16.385950  16.489780  16.61654   \n",
       "2  38763.0  158.577400   8.119606  21.701020  19.969390  22.168060  24.86762   \n",
       "3  50983.0   22.547143  38.914431  23.205320  23.693740  19.647354  22.09022   \n",
       "4  96748.0  157.409766  -0.728309  22.204771  20.575680  20.158960  20.01624   \n",
       "\n",
       "        z_0  clean       rowc  ...       g_5       r_5       i_5       z_5  \\\n",
       "0  14.16487    1.0   80.87382  ... -0.113362 -0.104191  0.013575 -0.086615   \n",
       "1  16.73915    1.0  469.16510  ...  0.029043 -0.014913 -0.004570  0.026165   \n",
       "2  18.85969    0.0  624.67590  ... -0.012575 -0.106629  0.344812  0.821800   \n",
       "3  23.62659    1.0  504.38990  ...  0.062271 -0.068304  0.188028 -2.269322   \n",
       "4  20.07253    1.0  442.46900  ... -0.014730 -0.002393 -0.041777 -0.085092   \n",
       "\n",
       "   u_6  g_6  r_6  i_6  z_6  class  \n",
       "0  3.0  3.0  7.0  3.0  5.0    1.0  \n",
       "1  6.0  8.0  6.0  4.0  0.0    1.0  \n",
       "2  3.0  5.0  1.0  1.0  5.0    0.0  \n",
       "3  3.0  8.0  5.0  7.0  2.0    0.0  \n",
       "4  6.0  6.0  8.0  5.0  0.0    2.0  \n",
       "\n",
       "[5 rows x 44 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data, train_labels = preprocessing(train_data)\n",
    "val_data, val_labels = preprocessing(val_data)\n",
    "unlabeled_data = preprocessing(unlabeled_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Clustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data=Clustering1(train_data, pd.concat([train_data, unlabeled_data]))\n",
    "val_data=Clustering1(val_data, pd.concat([train_data, unlabeled_data]))\n",
    "unlabeled_data = Clustering1(unlabeled_data, pd.concat([train_data, unlabeled_data]))\n",
    "train_data=Clustering2(train_data, pd.concat([train_data, unlabeled_data]))\n",
    "val_data=Clustering2(val_data, pd.concat([train_data, unlabeled_data]))\n",
    "unlabeled_data = Clustering2(unlabeled_data, pd.concat([train_data, unlabeled_data]))\n",
    "\n",
    "#train_data=Clustering1(train_data,unlabeled_data)\n",
    "#val_data=Clustering1(val_data, unlabeled_data)\n",
    "#unlabeled_data = Clustering1(unlabeled_data, unlabeled_data)\n",
    "#train_data=Clustering2(train_data, unlabeled_data)\n",
    "#val_data=Clustering2(val_data, unlabeled_data)\n",
    "#unlabeled_data = Clustering2(unlabeled_data, unlabeled_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Models"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## XGB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "    \n",
    "params = { \n",
    "    'learning_rate': 0.025,\n",
    "    'n_estimators': 1000,\n",
    "    'max_depth': 6,\n",
    "    'subsample': 0.75,\n",
    "    'colsample_bytree': 0.5,\n",
    "    'gamma': 1,\n",
    "    'objective': 'multi:softmax'\n",
    "}\n",
    "mlflow.set_experiment('XGB')\n",
    "with mlflow.start_run():\n",
    "    model = XGBClassifier(**params, random_state=42)\n",
    "    model.fit(train_data, train_labels, eval_metric='auc')\n",
    "    score = f1_score(model.predict(val_data), val_labels, average='macro')\n",
    "    print('f1: ', score)\n",
    "    mlflow.log_param('params', params)\n",
    "    mlflow.log_metric('f1_macro', score)\n",
    "#0.8436"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "cv_score = cross_validate(model, train_data, train_labels, cv=4, scoring=[\"f1_micro\", \"f1_macro\", \"f1_weighted\", \"accuracy\"], n_jobs=-1)\n",
    "cv_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8572360333430123"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cv_score['test_f1_macro'].mean()\n",
    "#0.857"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "a0=0\n",
    "a1=0\n",
    "a2=0\n",
    "#print(len(train_data))\n",
    "#print(len(model.predict\n",
    "for i,j in enumerate(model.predict(val_data)):\n",
    "    if j==0:\n",
    "        a0+=1\n",
    "    elif j==1:\n",
    "        a1+=1\n",
    "    elif j==2:\n",
    "        a2+=1\n",
    "print(a0,a1,a2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.843634461423992"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f1_score(model.predict(val_data), val_labels, average='macro')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8719410277289675"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(model.predict(val_data), val_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "cv_score = cross_validate(model, train_data, train_labels, cv=4, scoring='accuracy', n_jobs=-1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8573666666666667"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cv_score['test_score'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "cv_score = cross_validate(model, train_data, train_labels, cv=10, scoring='accuracy', n_jobs=-1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8591666666666666"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cv_score['test_score'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### gridsearch(XGB)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "params = {\n",
    "    'random_state': [42],\n",
    "    'tree_method': ['hist'],\n",
    "    'grow_policy': ['lossguide'],\n",
    "    'n_estimators': [500,1000],\n",
    "    'eta': [0.01,0.02,0.03],\n",
    "    'max_depth': [2,3,4,5,6],\n",
    "    'min_child_weight': [1],\n",
    "    'max_bin': [120,240],\n",
    "    'subsample': [0.5,0.8,0.95],\n",
    "    'reg_lambda': [0.1, 1.0, 5.0, 10.0, 50.0, 100.0],\n",
    "\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'eta': 0.02,\n",
       " 'grow_policy': 'lossguide',\n",
       " 'max_bin': 120,\n",
       " 'max_depth': 3,\n",
       " 'min_child_weight': 1,\n",
       " 'n_estimators': 1000,\n",
       " 'random_state': 42,\n",
       " 'reg_lambda': 100.0,\n",
       " 'subsample': 0.5,\n",
       " 'tree_method': 'hist'}"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "GridS.best_params_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## SVM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "f1:  0.7707807340941862\n"
     ]
    }
   ],
   "source": [
    "params = {'C': 0.1, 'coef0': 0.001, 'degree': 3, 'gamma': 'scale', 'kernel': 'rbf'}\n",
    "model = SVC(**params)\n",
    "clf = make_pipeline(StandardScaler(), model)\n",
    "#print('cv accuracy: ', cross_val_score(clf, train_data, train_labels, scoring='accuracy', cv = 10).mean())\n",
    "clf.fit(train_data, train_labels)\n",
    "predictions_SVM = clf.predict(val_data)\n",
    "print('f1: ', f1_score(clf.predict(val_data), val_labels,average='macro'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### gridsearch(SVM)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "params = {\n",
    "    'kernel' : ['rbf'],\n",
    "    'C' : [0.1,0.5,1],\n",
    "    'degree': [3,6,9],\n",
    "    'coef0': [0.001,2],\n",
    "    'gamma': ('auto', 'scale')\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 3 folds for each of 36 candidates, totalling 108 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Using backend LokyBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=-1)]: Done  24 tasks      | elapsed:  8.5min\n",
      "[Parallel(n_jobs=-1)]: Done 108 out of 108 | elapsed: 41.0min finished\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=3, estimator=SVC(), n_jobs=-1,\n",
       "             param_grid={'C': [0.1, 0.5, 1], 'coef0': [0.001, 2],\n",
       "                         'degree': [3, 6, 9], 'gamma': ('auto', 'scale'),\n",
       "                         'kernel': ['rbf']},\n",
       "             scoring=make_scorer(f1_score, average=macro), verbose=3)"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "GSmodel=SVC()\n",
    "GridS = GridSearchCV(GSmodel,params, cv=3,verbose=3, n_jobs=-1,scoring=f1)\n",
    "GridS.fit(train_data, train_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 0.1, 'coef0': 0.001, 'degree': 3, 'gamma': 'scale', 'kernel': 'rbf'}"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "GridS.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "16392 3648 3293\n"
     ]
    }
   ],
   "source": [
    "predict_info(predictions_SVM)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "16392 3648 3293\n"
     ]
    }
   ],
   "source": [
    "a0=0\n",
    "a1=0\n",
    "a2=0\n",
    "for i,j in enumerate(clf.predict(val_data)):\n",
    "    if j==0:\n",
    "        a0+=1\n",
    "    elif j==1:\n",
    "        a1+=1\n",
    "    elif j==2:\n",
    "        a2+=1\n",
    "print(a0,a1,a2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# RF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "f1:  0.8021061899825855\n"
     ]
    }
   ],
   "source": [
    "params = {\"n_estimators\": 10,\n",
    "    \"criterion\": \"gini\",\n",
    "    \"min_samples_split\": 10,\n",
    "    \"max_features\": \"auto\",\n",
    "    \"bootstrap\": True,\n",
    "    \"n_jobs\": -1}\n",
    "model = RandomForestClassifier(**params)\n",
    "#print('cv accuracy: ', cross_val_score(model, train_data, train_labels, scoring='accuracy', cv = 10).mean())\n",
    "model.fit(train_data, train_labels)\n",
    "predictions_RF = model.predict(val_data)\n",
    "print('f1: ', f1_score(model.predict(val_data), val_labels, average='macro'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'fit_time': array([1.91488361, 1.31097293, 1.95794892, 1.20080781, 1.25388598,\n",
       "        1.48122883, 1.5463264 , 1.74062085, 1.16174889, 1.18077779]),\n",
       " 'score_time': array([0.02002859, 0.57286286, 0.37256098, 0.64597249, 0.46469951,\n",
       "        0.35553455, 0.30245638, 0.65098214, 0.02203393, 0.01702523]),\n",
       " 'test_f1_micro': array([0.817     , 0.81066667, 0.81433333, 0.80366667, 0.85066667,\n",
       "        0.831     , 0.836     , 0.849     , 0.83366667, 0.826     ]),\n",
       " 'test_f1_macro': array([0.81616898, 0.81071378, 0.81400467, 0.8039977 , 0.85038787,\n",
       "        0.82993452, 0.8351612 , 0.84830815, 0.83349679, 0.82619007]),\n",
       " 'test_f1_weighted': array([0.81616898, 0.81071378, 0.81400467, 0.8039977 , 0.85038787,\n",
       "        0.82993452, 0.8351612 , 0.84830815, 0.83349679, 0.82619007])}"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfc_knn_score = cross_validate(model, train_data, train_labels, cv=10, scoring=[\"f1_micro\", \"f1_macro\", \"f1_weighted\"], n_jobs=-1)\n",
    "rfc_knn_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for k, v in rfc_knn_score.items():\n",
    "    print(k, np.mean(v))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15140 418 7775\n"
     ]
    }
   ],
   "source": [
    "predict_info(predictions_RF)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# kNN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "f1:  0.7255196853171865\n"
     ]
    }
   ],
   "source": [
    "params={'n_neighbors': 13}\n",
    "model = KNeighborsClassifier(**params)\n",
    "clf = make_pipeline(StandardScaler(), model)\n",
    "clf.fit(train_data, train_labels)\n",
    "\n",
    "predictions_kNN = clf.predict(val_data)\n",
    "print('f1: ', f1_score(clf.predict(val_data), val_labels, average='macro'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14569 3560 5204\n"
     ]
    }
   ],
   "source": [
    "predict_info(predictions_kNN)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "model = KMeans(n_clusters = 10, random_state = 42)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Catboost "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0:\tlearn: 1.0488384\ttotal: 117ms\tremaining: 1m 56s\n",
      "1:\tlearn: 1.0067540\ttotal: 171ms\tremaining: 1m 25s\n",
      "2:\tlearn: 0.9686874\ttotal: 230ms\tremaining: 1m 16s\n",
      "3:\tlearn: 0.9329943\ttotal: 290ms\tremaining: 1m 12s\n",
      "4:\tlearn: 0.9014587\ttotal: 350ms\tremaining: 1m 9s\n",
      "5:\tlearn: 0.8729478\ttotal: 407ms\tremaining: 1m 7s\n",
      "6:\tlearn: 0.8466347\ttotal: 464ms\tremaining: 1m 5s\n",
      "7:\tlearn: 0.8240926\ttotal: 515ms\tremaining: 1m 3s\n",
      "8:\tlearn: 0.8024818\ttotal: 574ms\tremaining: 1m 3s\n",
      "9:\tlearn: 0.7825750\ttotal: 627ms\tremaining: 1m 2s\n",
      "10:\tlearn: 0.7638587\ttotal: 680ms\tremaining: 1m 1s\n",
      "11:\tlearn: 0.7476058\ttotal: 735ms\tremaining: 1m\n",
      "12:\tlearn: 0.7313722\ttotal: 788ms\tremaining: 59.8s\n",
      "13:\tlearn: 0.7175167\ttotal: 844ms\tremaining: 59.4s\n",
      "14:\tlearn: 0.7036144\ttotal: 896ms\tremaining: 58.8s\n",
      "15:\tlearn: 0.6910687\ttotal: 958ms\tremaining: 58.9s\n",
      "16:\tlearn: 0.6792352\ttotal: 1.01s\tremaining: 58.7s\n",
      "17:\tlearn: 0.6684691\ttotal: 1.07s\tremaining: 58.4s\n",
      "18:\tlearn: 0.6584435\ttotal: 1.12s\tremaining: 58s\n",
      "19:\tlearn: 0.6488019\ttotal: 1.18s\tremaining: 57.9s\n",
      "20:\tlearn: 0.6397736\ttotal: 1.24s\tremaining: 57.8s\n",
      "21:\tlearn: 0.6316214\ttotal: 1.29s\tremaining: 57.6s\n",
      "22:\tlearn: 0.6239515\ttotal: 1.35s\tremaining: 57.2s\n",
      "23:\tlearn: 0.6162960\ttotal: 1.41s\tremaining: 57.2s\n",
      "24:\tlearn: 0.6091835\ttotal: 1.46s\tremaining: 57s\n",
      "25:\tlearn: 0.6026501\ttotal: 1.51s\tremaining: 56.7s\n",
      "26:\tlearn: 0.5966253\ttotal: 1.57s\tremaining: 56.6s\n",
      "27:\tlearn: 0.5905816\ttotal: 1.63s\tremaining: 56.6s\n",
      "28:\tlearn: 0.5854491\ttotal: 1.68s\tremaining: 56.4s\n",
      "29:\tlearn: 0.5798769\ttotal: 1.74s\tremaining: 56.1s\n",
      "30:\tlearn: 0.5749853\ttotal: 1.79s\tremaining: 55.9s\n",
      "31:\tlearn: 0.5703688\ttotal: 1.84s\tremaining: 55.6s\n",
      "32:\tlearn: 0.5653839\ttotal: 1.89s\tremaining: 55.5s\n",
      "33:\tlearn: 0.5614473\ttotal: 1.95s\tremaining: 55.3s\n",
      "34:\tlearn: 0.5571712\ttotal: 2s\tremaining: 55.2s\n",
      "35:\tlearn: 0.5536166\ttotal: 2.05s\tremaining: 55s\n",
      "36:\tlearn: 0.5503285\ttotal: 2.11s\tremaining: 54.9s\n",
      "37:\tlearn: 0.5468131\ttotal: 2.17s\tremaining: 55s\n",
      "38:\tlearn: 0.5437716\ttotal: 2.23s\tremaining: 54.9s\n",
      "39:\tlearn: 0.5409428\ttotal: 2.29s\tremaining: 54.9s\n",
      "40:\tlearn: 0.5378962\ttotal: 2.34s\tremaining: 54.7s\n",
      "41:\tlearn: 0.5352707\ttotal: 2.4s\tremaining: 54.6s\n",
      "42:\tlearn: 0.5327439\ttotal: 2.45s\tremaining: 54.4s\n",
      "43:\tlearn: 0.5301302\ttotal: 2.5s\tremaining: 54.4s\n",
      "44:\tlearn: 0.5278096\ttotal: 2.56s\tremaining: 54.3s\n",
      "45:\tlearn: 0.5253256\ttotal: 2.62s\tremaining: 54.2s\n",
      "46:\tlearn: 0.5233892\ttotal: 2.67s\tremaining: 54.1s\n",
      "47:\tlearn: 0.5208580\ttotal: 2.72s\tremaining: 54s\n",
      "48:\tlearn: 0.5186338\ttotal: 2.77s\tremaining: 53.8s\n",
      "49:\tlearn: 0.5163195\ttotal: 2.82s\tremaining: 53.6s\n",
      "50:\tlearn: 0.5145404\ttotal: 2.87s\tremaining: 53.5s\n",
      "51:\tlearn: 0.5123475\ttotal: 2.92s\tremaining: 53.3s\n",
      "52:\tlearn: 0.5102560\ttotal: 2.98s\tremaining: 53.2s\n",
      "53:\tlearn: 0.5087607\ttotal: 3.03s\tremaining: 53.1s\n",
      "54:\tlearn: 0.5069835\ttotal: 3.08s\tremaining: 53s\n",
      "55:\tlearn: 0.5052066\ttotal: 3.14s\tremaining: 52.9s\n",
      "56:\tlearn: 0.5036696\ttotal: 3.19s\tremaining: 52.8s\n",
      "57:\tlearn: 0.5019864\ttotal: 3.24s\tremaining: 52.7s\n",
      "58:\tlearn: 0.5004156\ttotal: 3.29s\tremaining: 52.5s\n",
      "59:\tlearn: 0.4988490\ttotal: 3.35s\tremaining: 52.4s\n",
      "60:\tlearn: 0.4974122\ttotal: 3.4s\tremaining: 52.3s\n",
      "61:\tlearn: 0.4964008\ttotal: 3.45s\tremaining: 52.1s\n",
      "62:\tlearn: 0.4953359\ttotal: 3.5s\tremaining: 52s\n",
      "63:\tlearn: 0.4938729\ttotal: 3.55s\tremaining: 51.9s\n",
      "64:\tlearn: 0.4923585\ttotal: 3.6s\tremaining: 51.9s\n",
      "65:\tlearn: 0.4910301\ttotal: 3.65s\tremaining: 51.7s\n",
      "66:\tlearn: 0.4897322\ttotal: 3.71s\tremaining: 51.6s\n",
      "67:\tlearn: 0.4888193\ttotal: 3.76s\tremaining: 51.5s\n",
      "68:\tlearn: 0.4879470\ttotal: 3.8s\tremaining: 51.3s\n",
      "69:\tlearn: 0.4866626\ttotal: 3.85s\tremaining: 51.2s\n",
      "70:\tlearn: 0.4856968\ttotal: 3.9s\tremaining: 51.1s\n",
      "71:\tlearn: 0.4844882\ttotal: 3.96s\tremaining: 51s\n",
      "72:\tlearn: 0.4834600\ttotal: 4.01s\tremaining: 50.9s\n",
      "73:\tlearn: 0.4821341\ttotal: 4.07s\tremaining: 50.9s\n",
      "74:\tlearn: 0.4810589\ttotal: 4.12s\tremaining: 50.8s\n",
      "75:\tlearn: 0.4801721\ttotal: 4.17s\tremaining: 50.7s\n",
      "76:\tlearn: 0.4794513\ttotal: 4.22s\tremaining: 50.5s\n",
      "77:\tlearn: 0.4784256\ttotal: 4.27s\tremaining: 50.5s\n",
      "78:\tlearn: 0.4775168\ttotal: 4.32s\tremaining: 50.4s\n",
      "79:\tlearn: 0.4769844\ttotal: 4.37s\tremaining: 50.3s\n",
      "80:\tlearn: 0.4759096\ttotal: 4.42s\tremaining: 50.2s\n",
      "81:\tlearn: 0.4752100\ttotal: 4.47s\tremaining: 50.1s\n",
      "82:\tlearn: 0.4742153\ttotal: 4.52s\tremaining: 50s\n",
      "83:\tlearn: 0.4734218\ttotal: 4.58s\tremaining: 49.9s\n",
      "84:\tlearn: 0.4724135\ttotal: 4.63s\tremaining: 49.9s\n",
      "85:\tlearn: 0.4717640\ttotal: 4.7s\tremaining: 49.9s\n",
      "86:\tlearn: 0.4705900\ttotal: 4.75s\tremaining: 49.9s\n",
      "87:\tlearn: 0.4698042\ttotal: 4.8s\tremaining: 49.8s\n",
      "88:\tlearn: 0.4691674\ttotal: 4.86s\tremaining: 49.8s\n",
      "89:\tlearn: 0.4685463\ttotal: 4.91s\tremaining: 49.6s\n",
      "90:\tlearn: 0.4678500\ttotal: 4.96s\tremaining: 49.5s\n",
      "91:\tlearn: 0.4669707\ttotal: 5.01s\tremaining: 49.5s\n",
      "92:\tlearn: 0.4664368\ttotal: 5.07s\tremaining: 49.4s\n",
      "93:\tlearn: 0.4657144\ttotal: 5.12s\tremaining: 49.4s\n",
      "94:\tlearn: 0.4649402\ttotal: 5.17s\tremaining: 49.3s\n",
      "95:\tlearn: 0.4641587\ttotal: 5.22s\tremaining: 49.2s\n",
      "96:\tlearn: 0.4635574\ttotal: 5.28s\tremaining: 49.1s\n",
      "97:\tlearn: 0.4631465\ttotal: 5.33s\tremaining: 49.1s\n",
      "98:\tlearn: 0.4624529\ttotal: 5.38s\tremaining: 48.9s\n",
      "99:\tlearn: 0.4618049\ttotal: 5.43s\tremaining: 48.9s\n",
      "100:\tlearn: 0.4611125\ttotal: 5.48s\tremaining: 48.8s\n",
      "101:\tlearn: 0.4606324\ttotal: 5.53s\tremaining: 48.7s\n",
      "102:\tlearn: 0.4599186\ttotal: 5.59s\tremaining: 48.7s\n",
      "103:\tlearn: 0.4591656\ttotal: 5.64s\tremaining: 48.6s\n",
      "104:\tlearn: 0.4585425\ttotal: 5.7s\tremaining: 48.6s\n",
      "105:\tlearn: 0.4581942\ttotal: 5.75s\tremaining: 48.5s\n",
      "106:\tlearn: 0.4575999\ttotal: 5.8s\tremaining: 48.4s\n",
      "107:\tlearn: 0.4570634\ttotal: 5.85s\tremaining: 48.3s\n",
      "108:\tlearn: 0.4561672\ttotal: 5.9s\tremaining: 48.3s\n",
      "109:\tlearn: 0.4555998\ttotal: 5.96s\tremaining: 48.2s\n",
      "110:\tlearn: 0.4550999\ttotal: 6.01s\tremaining: 48.1s\n",
      "111:\tlearn: 0.4542263\ttotal: 6.06s\tremaining: 48.1s\n",
      "112:\tlearn: 0.4536822\ttotal: 6.11s\tremaining: 48s\n",
      "113:\tlearn: 0.4533192\ttotal: 6.16s\tremaining: 47.9s\n",
      "114:\tlearn: 0.4527390\ttotal: 6.21s\tremaining: 47.8s\n",
      "115:\tlearn: 0.4520851\ttotal: 6.27s\tremaining: 47.8s\n",
      "116:\tlearn: 0.4512926\ttotal: 6.32s\tremaining: 47.7s\n",
      "117:\tlearn: 0.4507363\ttotal: 6.37s\tremaining: 47.6s\n",
      "118:\tlearn: 0.4503223\ttotal: 6.42s\tremaining: 47.5s\n",
      "119:\tlearn: 0.4496442\ttotal: 6.47s\tremaining: 47.5s\n",
      "120:\tlearn: 0.4490759\ttotal: 6.53s\tremaining: 47.4s\n",
      "121:\tlearn: 0.4486940\ttotal: 6.58s\tremaining: 47.4s\n",
      "122:\tlearn: 0.4484041\ttotal: 6.63s\tremaining: 47.3s\n",
      "123:\tlearn: 0.4478069\ttotal: 6.68s\tremaining: 47.2s\n",
      "124:\tlearn: 0.4473118\ttotal: 6.73s\tremaining: 47.1s\n",
      "125:\tlearn: 0.4468726\ttotal: 6.78s\tremaining: 47s\n",
      "126:\tlearn: 0.4464349\ttotal: 6.83s\tremaining: 47s\n",
      "127:\tlearn: 0.4462259\ttotal: 6.88s\tremaining: 46.9s\n",
      "128:\tlearn: 0.4457930\ttotal: 6.94s\tremaining: 46.9s\n",
      "129:\tlearn: 0.4455733\ttotal: 6.99s\tremaining: 46.8s\n",
      "130:\tlearn: 0.4449042\ttotal: 7.05s\tremaining: 46.7s\n",
      "131:\tlearn: 0.4445882\ttotal: 7.1s\tremaining: 46.7s\n",
      "132:\tlearn: 0.4439830\ttotal: 7.16s\tremaining: 46.7s\n",
      "133:\tlearn: 0.4435020\ttotal: 7.21s\tremaining: 46.6s\n",
      "134:\tlearn: 0.4432307\ttotal: 7.26s\tremaining: 46.5s\n",
      "135:\tlearn: 0.4427551\ttotal: 7.31s\tremaining: 46.5s\n",
      "136:\tlearn: 0.4423359\ttotal: 7.37s\tremaining: 46.4s\n",
      "137:\tlearn: 0.4419282\ttotal: 7.42s\tremaining: 46.3s\n",
      "138:\tlearn: 0.4414652\ttotal: 7.47s\tremaining: 46.3s\n",
      "139:\tlearn: 0.4411779\ttotal: 7.52s\tremaining: 46.2s\n",
      "140:\tlearn: 0.4409547\ttotal: 7.57s\tremaining: 46.1s\n",
      "141:\tlearn: 0.4406469\ttotal: 7.62s\tremaining: 46s\n",
      "142:\tlearn: 0.4402700\ttotal: 7.67s\tremaining: 45.9s\n",
      "143:\tlearn: 0.4398164\ttotal: 7.72s\tremaining: 45.9s\n",
      "144:\tlearn: 0.4391826\ttotal: 7.77s\tremaining: 45.8s\n",
      "145:\tlearn: 0.4387159\ttotal: 7.83s\tremaining: 45.8s\n",
      "146:\tlearn: 0.4383679\ttotal: 7.88s\tremaining: 45.7s\n",
      "147:\tlearn: 0.4373822\ttotal: 7.93s\tremaining: 45.7s\n",
      "148:\tlearn: 0.4367459\ttotal: 7.99s\tremaining: 45.6s\n",
      "149:\tlearn: 0.4362944\ttotal: 8.04s\tremaining: 45.5s\n",
      "150:\tlearn: 0.4356524\ttotal: 8.09s\tremaining: 45.5s\n",
      "151:\tlearn: 0.4351427\ttotal: 8.16s\tremaining: 45.5s\n",
      "152:\tlearn: 0.4347845\ttotal: 8.22s\tremaining: 45.5s\n",
      "153:\tlearn: 0.4343448\ttotal: 8.28s\tremaining: 45.5s\n",
      "154:\tlearn: 0.4339575\ttotal: 8.34s\tremaining: 45.5s\n",
      "155:\tlearn: 0.4336423\ttotal: 8.39s\tremaining: 45.4s\n",
      "156:\tlearn: 0.4334225\ttotal: 8.45s\tremaining: 45.4s\n",
      "157:\tlearn: 0.4330717\ttotal: 8.5s\tremaining: 45.3s\n",
      "158:\tlearn: 0.4328476\ttotal: 8.55s\tremaining: 45.2s\n",
      "159:\tlearn: 0.4325658\ttotal: 8.59s\tremaining: 45.1s\n",
      "160:\tlearn: 0.4319524\ttotal: 8.65s\tremaining: 45.1s\n",
      "161:\tlearn: 0.4317785\ttotal: 8.7s\tremaining: 45s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "162:\tlearn: 0.4313813\ttotal: 8.76s\tremaining: 45s\n",
      "163:\tlearn: 0.4311207\ttotal: 8.8s\tremaining: 44.9s\n",
      "164:\tlearn: 0.4307455\ttotal: 8.86s\tremaining: 44.8s\n",
      "165:\tlearn: 0.4303784\ttotal: 8.9s\tremaining: 44.7s\n",
      "166:\tlearn: 0.4299273\ttotal: 8.96s\tremaining: 44.7s\n",
      "167:\tlearn: 0.4293794\ttotal: 9.01s\tremaining: 44.6s\n",
      "168:\tlearn: 0.4290499\ttotal: 9.06s\tremaining: 44.5s\n",
      "169:\tlearn: 0.4286847\ttotal: 9.11s\tremaining: 44.5s\n",
      "170:\tlearn: 0.4282285\ttotal: 9.16s\tremaining: 44.4s\n",
      "171:\tlearn: 0.4275847\ttotal: 9.21s\tremaining: 44.4s\n",
      "172:\tlearn: 0.4270256\ttotal: 9.27s\tremaining: 44.3s\n",
      "173:\tlearn: 0.4266911\ttotal: 9.31s\tremaining: 44.2s\n",
      "174:\tlearn: 0.4264054\ttotal: 9.36s\tremaining: 44.1s\n",
      "175:\tlearn: 0.4257205\ttotal: 9.41s\tremaining: 44.1s\n",
      "176:\tlearn: 0.4255112\ttotal: 9.46s\tremaining: 44s\n",
      "177:\tlearn: 0.4249569\ttotal: 9.52s\tremaining: 44s\n",
      "178:\tlearn: 0.4243606\ttotal: 9.57s\tremaining: 43.9s\n",
      "179:\tlearn: 0.4240088\ttotal: 9.63s\tremaining: 43.9s\n",
      "180:\tlearn: 0.4237150\ttotal: 9.68s\tremaining: 43.8s\n",
      "181:\tlearn: 0.4235904\ttotal: 9.72s\tremaining: 43.7s\n",
      "182:\tlearn: 0.4233978\ttotal: 9.77s\tremaining: 43.6s\n",
      "183:\tlearn: 0.4231425\ttotal: 9.82s\tremaining: 43.6s\n",
      "184:\tlearn: 0.4227291\ttotal: 9.88s\tremaining: 43.5s\n",
      "185:\tlearn: 0.4224973\ttotal: 9.93s\tremaining: 43.4s\n",
      "186:\tlearn: 0.4221726\ttotal: 9.97s\tremaining: 43.4s\n",
      "187:\tlearn: 0.4217847\ttotal: 10s\tremaining: 43.3s\n",
      "188:\tlearn: 0.4215528\ttotal: 10.1s\tremaining: 43.2s\n",
      "189:\tlearn: 0.4213473\ttotal: 10.1s\tremaining: 43.2s\n",
      "190:\tlearn: 0.4208731\ttotal: 10.2s\tremaining: 43.1s\n",
      "191:\tlearn: 0.4207141\ttotal: 10.2s\tremaining: 43s\n",
      "192:\tlearn: 0.4202882\ttotal: 10.3s\tremaining: 43s\n",
      "193:\tlearn: 0.4200015\ttotal: 10.3s\tremaining: 43s\n",
      "194:\tlearn: 0.4196187\ttotal: 10.4s\tremaining: 42.9s\n",
      "195:\tlearn: 0.4191783\ttotal: 10.4s\tremaining: 42.8s\n",
      "196:\tlearn: 0.4189687\ttotal: 10.5s\tremaining: 42.8s\n",
      "197:\tlearn: 0.4187481\ttotal: 10.5s\tremaining: 42.7s\n",
      "198:\tlearn: 0.4184444\ttotal: 10.6s\tremaining: 42.7s\n",
      "199:\tlearn: 0.4180453\ttotal: 10.6s\tremaining: 42.6s\n",
      "200:\tlearn: 0.4177495\ttotal: 10.7s\tremaining: 42.5s\n",
      "201:\tlearn: 0.4174015\ttotal: 10.8s\tremaining: 42.5s\n",
      "202:\tlearn: 0.4172304\ttotal: 10.8s\tremaining: 42.4s\n",
      "203:\tlearn: 0.4166911\ttotal: 10.9s\tremaining: 42.4s\n",
      "204:\tlearn: 0.4164666\ttotal: 10.9s\tremaining: 42.3s\n",
      "205:\tlearn: 0.4161351\ttotal: 11s\tremaining: 42.3s\n",
      "206:\tlearn: 0.4158064\ttotal: 11s\tremaining: 42.2s\n",
      "207:\tlearn: 0.4153956\ttotal: 11.1s\tremaining: 42.2s\n",
      "208:\tlearn: 0.4147958\ttotal: 11.2s\tremaining: 42.3s\n",
      "209:\tlearn: 0.4145555\ttotal: 11.2s\tremaining: 42.3s\n",
      "210:\tlearn: 0.4139951\ttotal: 11.3s\tremaining: 42.3s\n",
      "211:\tlearn: 0.4137308\ttotal: 11.4s\tremaining: 42.3s\n",
      "212:\tlearn: 0.4134274\ttotal: 11.5s\tremaining: 42.3s\n",
      "213:\tlearn: 0.4132141\ttotal: 11.5s\tremaining: 42.4s\n",
      "214:\tlearn: 0.4127165\ttotal: 11.6s\tremaining: 42.4s\n",
      "215:\tlearn: 0.4122987\ttotal: 11.7s\tremaining: 42.4s\n",
      "216:\tlearn: 0.4119669\ttotal: 11.7s\tremaining: 42.3s\n",
      "217:\tlearn: 0.4116083\ttotal: 11.8s\tremaining: 42.3s\n",
      "218:\tlearn: 0.4114407\ttotal: 11.9s\tremaining: 42.3s\n",
      "219:\tlearn: 0.4107657\ttotal: 11.9s\tremaining: 42.3s\n",
      "220:\tlearn: 0.4102920\ttotal: 12s\tremaining: 42.4s\n",
      "221:\tlearn: 0.4098304\ttotal: 12.1s\tremaining: 42.4s\n",
      "222:\tlearn: 0.4093768\ttotal: 12.1s\tremaining: 42.3s\n",
      "223:\tlearn: 0.4087629\ttotal: 12.2s\tremaining: 42.3s\n",
      "224:\tlearn: 0.4084117\ttotal: 12.3s\tremaining: 42.4s\n",
      "225:\tlearn: 0.4082492\ttotal: 12.4s\tremaining: 42.5s\n",
      "226:\tlearn: 0.4079442\ttotal: 12.5s\tremaining: 42.5s\n",
      "227:\tlearn: 0.4074608\ttotal: 12.6s\tremaining: 42.6s\n",
      "228:\tlearn: 0.4071813\ttotal: 12.7s\tremaining: 42.6s\n",
      "229:\tlearn: 0.4068300\ttotal: 12.7s\tremaining: 42.6s\n",
      "230:\tlearn: 0.4065830\ttotal: 12.8s\tremaining: 42.5s\n",
      "231:\tlearn: 0.4060395\ttotal: 12.9s\tremaining: 42.6s\n",
      "232:\tlearn: 0.4057445\ttotal: 12.9s\tremaining: 42.6s\n",
      "233:\tlearn: 0.4053894\ttotal: 13s\tremaining: 42.6s\n",
      "234:\tlearn: 0.4051569\ttotal: 13.1s\tremaining: 42.5s\n",
      "235:\tlearn: 0.4047534\ttotal: 13.1s\tremaining: 42.5s\n",
      "236:\tlearn: 0.4045191\ttotal: 13.2s\tremaining: 42.4s\n",
      "237:\tlearn: 0.4039353\ttotal: 13.2s\tremaining: 42.4s\n",
      "238:\tlearn: 0.4036362\ttotal: 13.3s\tremaining: 42.4s\n",
      "239:\tlearn: 0.4033441\ttotal: 13.4s\tremaining: 42.4s\n",
      "240:\tlearn: 0.4030645\ttotal: 13.4s\tremaining: 42.3s\n",
      "241:\tlearn: 0.4029316\ttotal: 13.5s\tremaining: 42.3s\n",
      "242:\tlearn: 0.4026638\ttotal: 13.6s\tremaining: 42.3s\n",
      "243:\tlearn: 0.4023733\ttotal: 13.6s\tremaining: 42.3s\n",
      "244:\tlearn: 0.4020581\ttotal: 13.7s\tremaining: 42.2s\n",
      "245:\tlearn: 0.4016310\ttotal: 13.8s\tremaining: 42.2s\n",
      "246:\tlearn: 0.4013082\ttotal: 13.8s\tremaining: 42.2s\n",
      "247:\tlearn: 0.4010416\ttotal: 13.9s\tremaining: 42.1s\n",
      "248:\tlearn: 0.4007159\ttotal: 14s\tremaining: 42.1s\n",
      "249:\tlearn: 0.4003538\ttotal: 14s\tremaining: 42.1s\n",
      "250:\tlearn: 0.4000244\ttotal: 14.1s\tremaining: 42.1s\n",
      "251:\tlearn: 0.3995622\ttotal: 14.2s\tremaining: 42.2s\n",
      "252:\tlearn: 0.3991524\ttotal: 14.3s\tremaining: 42.2s\n",
      "253:\tlearn: 0.3988318\ttotal: 14.3s\tremaining: 42.1s\n",
      "254:\tlearn: 0.3984912\ttotal: 14.4s\tremaining: 42.1s\n",
      "255:\tlearn: 0.3981845\ttotal: 14.5s\tremaining: 42.1s\n",
      "256:\tlearn: 0.3979063\ttotal: 14.5s\tremaining: 42.1s\n",
      "257:\tlearn: 0.3974235\ttotal: 14.6s\tremaining: 42.1s\n",
      "258:\tlearn: 0.3970152\ttotal: 14.7s\tremaining: 42.1s\n",
      "259:\tlearn: 0.3967422\ttotal: 14.8s\tremaining: 42s\n",
      "260:\tlearn: 0.3965261\ttotal: 14.8s\tremaining: 42s\n",
      "261:\tlearn: 0.3961637\ttotal: 14.9s\tremaining: 42s\n",
      "262:\tlearn: 0.3958121\ttotal: 15s\tremaining: 41.9s\n",
      "263:\tlearn: 0.3954770\ttotal: 15.1s\tremaining: 42s\n",
      "264:\tlearn: 0.3951342\ttotal: 15.2s\tremaining: 42.1s\n",
      "265:\tlearn: 0.3947278\ttotal: 15.3s\tremaining: 42.1s\n",
      "266:\tlearn: 0.3945174\ttotal: 15.3s\tremaining: 42.1s\n",
      "267:\tlearn: 0.3941224\ttotal: 15.4s\tremaining: 42.2s\n",
      "268:\tlearn: 0.3938235\ttotal: 15.5s\tremaining: 42.2s\n",
      "269:\tlearn: 0.3935508\ttotal: 15.6s\tremaining: 42.1s\n",
      "270:\tlearn: 0.3931037\ttotal: 15.6s\tremaining: 42.1s\n",
      "271:\tlearn: 0.3927490\ttotal: 15.7s\tremaining: 42.1s\n",
      "272:\tlearn: 0.3924248\ttotal: 15.8s\tremaining: 42s\n",
      "273:\tlearn: 0.3922112\ttotal: 15.9s\tremaining: 42s\n",
      "274:\tlearn: 0.3920878\ttotal: 15.9s\tremaining: 42s\n",
      "275:\tlearn: 0.3917840\ttotal: 16s\tremaining: 41.9s\n",
      "276:\tlearn: 0.3914803\ttotal: 16s\tremaining: 41.8s\n",
      "277:\tlearn: 0.3912459\ttotal: 16.1s\tremaining: 41.8s\n",
      "278:\tlearn: 0.3908358\ttotal: 16.2s\tremaining: 41.8s\n",
      "279:\tlearn: 0.3905081\ttotal: 16.2s\tremaining: 41.7s\n",
      "280:\tlearn: 0.3904256\ttotal: 16.3s\tremaining: 41.7s\n",
      "281:\tlearn: 0.3901878\ttotal: 16.4s\tremaining: 41.6s\n",
      "282:\tlearn: 0.3899029\ttotal: 16.4s\tremaining: 41.6s\n",
      "283:\tlearn: 0.3897786\ttotal: 16.5s\tremaining: 41.5s\n",
      "284:\tlearn: 0.3895423\ttotal: 16.5s\tremaining: 41.5s\n",
      "285:\tlearn: 0.3892559\ttotal: 16.6s\tremaining: 41.4s\n",
      "286:\tlearn: 0.3891152\ttotal: 16.7s\tremaining: 41.4s\n",
      "287:\tlearn: 0.3888267\ttotal: 16.7s\tremaining: 41.4s\n",
      "288:\tlearn: 0.3885861\ttotal: 16.8s\tremaining: 41.3s\n",
      "289:\tlearn: 0.3883724\ttotal: 16.9s\tremaining: 41.3s\n",
      "290:\tlearn: 0.3880340\ttotal: 16.9s\tremaining: 41.2s\n",
      "291:\tlearn: 0.3877397\ttotal: 17s\tremaining: 41.2s\n",
      "292:\tlearn: 0.3874392\ttotal: 17s\tremaining: 41.1s\n",
      "293:\tlearn: 0.3870781\ttotal: 17.1s\tremaining: 41.1s\n",
      "294:\tlearn: 0.3869159\ttotal: 17.2s\tremaining: 41s\n",
      "295:\tlearn: 0.3865658\ttotal: 17.2s\tremaining: 41s\n",
      "296:\tlearn: 0.3861850\ttotal: 17.3s\tremaining: 41s\n",
      "297:\tlearn: 0.3857468\ttotal: 17.4s\tremaining: 41s\n",
      "298:\tlearn: 0.3855040\ttotal: 17.5s\tremaining: 40.9s\n",
      "299:\tlearn: 0.3853466\ttotal: 17.5s\tremaining: 40.9s\n",
      "300:\tlearn: 0.3851703\ttotal: 17.6s\tremaining: 40.9s\n",
      "301:\tlearn: 0.3849633\ttotal: 17.7s\tremaining: 40.8s\n",
      "302:\tlearn: 0.3847415\ttotal: 17.7s\tremaining: 40.8s\n",
      "303:\tlearn: 0.3843134\ttotal: 17.8s\tremaining: 40.8s\n",
      "304:\tlearn: 0.3838876\ttotal: 17.9s\tremaining: 40.7s\n",
      "305:\tlearn: 0.3836293\ttotal: 17.9s\tremaining: 40.7s\n",
      "306:\tlearn: 0.3833560\ttotal: 18s\tremaining: 40.6s\n",
      "307:\tlearn: 0.3830506\ttotal: 18.1s\tremaining: 40.6s\n",
      "308:\tlearn: 0.3827552\ttotal: 18.1s\tremaining: 40.5s\n",
      "309:\tlearn: 0.3825385\ttotal: 18.2s\tremaining: 40.4s\n",
      "310:\tlearn: 0.3823908\ttotal: 18.2s\tremaining: 40.3s\n",
      "311:\tlearn: 0.3820715\ttotal: 18.3s\tremaining: 40.3s\n",
      "312:\tlearn: 0.3817945\ttotal: 18.3s\tremaining: 40.2s\n",
      "313:\tlearn: 0.3815811\ttotal: 18.4s\tremaining: 40.2s\n",
      "314:\tlearn: 0.3813255\ttotal: 18.4s\tremaining: 40.1s\n",
      "315:\tlearn: 0.3810045\ttotal: 18.5s\tremaining: 40.1s\n",
      "316:\tlearn: 0.3807109\ttotal: 18.6s\tremaining: 40s\n",
      "317:\tlearn: 0.3802798\ttotal: 18.6s\tremaining: 39.9s\n",
      "318:\tlearn: 0.3801231\ttotal: 18.7s\tremaining: 39.9s\n",
      "319:\tlearn: 0.3799241\ttotal: 18.7s\tremaining: 39.8s\n",
      "320:\tlearn: 0.3796883\ttotal: 18.8s\tremaining: 39.8s\n",
      "321:\tlearn: 0.3795248\ttotal: 18.9s\tremaining: 39.7s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "322:\tlearn: 0.3792896\ttotal: 18.9s\tremaining: 39.7s\n",
      "323:\tlearn: 0.3790901\ttotal: 19s\tremaining: 39.7s\n",
      "324:\tlearn: 0.3787978\ttotal: 19.1s\tremaining: 39.6s\n",
      "325:\tlearn: 0.3785810\ttotal: 19.1s\tremaining: 39.6s\n",
      "326:\tlearn: 0.3782849\ttotal: 19.2s\tremaining: 39.5s\n",
      "327:\tlearn: 0.3779312\ttotal: 19.3s\tremaining: 39.5s\n",
      "328:\tlearn: 0.3776946\ttotal: 19.3s\tremaining: 39.4s\n",
      "329:\tlearn: 0.3774855\ttotal: 19.4s\tremaining: 39.4s\n",
      "330:\tlearn: 0.3773276\ttotal: 19.5s\tremaining: 39.4s\n",
      "331:\tlearn: 0.3772063\ttotal: 19.5s\tremaining: 39.3s\n",
      "332:\tlearn: 0.3769688\ttotal: 19.6s\tremaining: 39.2s\n",
      "333:\tlearn: 0.3767217\ttotal: 19.6s\tremaining: 39.1s\n",
      "334:\tlearn: 0.3765536\ttotal: 19.7s\tremaining: 39.1s\n",
      "335:\tlearn: 0.3763510\ttotal: 19.7s\tremaining: 39s\n",
      "336:\tlearn: 0.3759941\ttotal: 19.8s\tremaining: 38.9s\n",
      "337:\tlearn: 0.3755308\ttotal: 19.8s\tremaining: 38.9s\n",
      "338:\tlearn: 0.3753407\ttotal: 19.9s\tremaining: 38.8s\n",
      "339:\tlearn: 0.3751192\ttotal: 19.9s\tremaining: 38.7s\n",
      "340:\tlearn: 0.3748672\ttotal: 20s\tremaining: 38.6s\n",
      "341:\tlearn: 0.3744710\ttotal: 20s\tremaining: 38.6s\n",
      "342:\tlearn: 0.3742583\ttotal: 20.1s\tremaining: 38.5s\n",
      "343:\tlearn: 0.3741206\ttotal: 20.1s\tremaining: 38.4s\n",
      "344:\tlearn: 0.3739434\ttotal: 20.2s\tremaining: 38.4s\n",
      "345:\tlearn: 0.3737979\ttotal: 20.3s\tremaining: 38.3s\n",
      "346:\tlearn: 0.3735312\ttotal: 20.3s\tremaining: 38.2s\n",
      "347:\tlearn: 0.3733672\ttotal: 20.4s\tremaining: 38.2s\n",
      "348:\tlearn: 0.3730776\ttotal: 20.4s\tremaining: 38.1s\n",
      "349:\tlearn: 0.3727404\ttotal: 20.5s\tremaining: 38.1s\n",
      "350:\tlearn: 0.3725085\ttotal: 20.5s\tremaining: 38s\n",
      "351:\tlearn: 0.3721471\ttotal: 20.6s\tremaining: 37.9s\n",
      "352:\tlearn: 0.3717516\ttotal: 20.7s\tremaining: 37.9s\n",
      "353:\tlearn: 0.3715935\ttotal: 20.8s\tremaining: 37.9s\n",
      "354:\tlearn: 0.3712704\ttotal: 20.8s\tremaining: 37.8s\n",
      "355:\tlearn: 0.3710629\ttotal: 20.9s\tremaining: 37.8s\n",
      "356:\tlearn: 0.3709307\ttotal: 21s\tremaining: 37.8s\n",
      "357:\tlearn: 0.3706438\ttotal: 21s\tremaining: 37.7s\n",
      "358:\tlearn: 0.3704988\ttotal: 21.1s\tremaining: 37.7s\n",
      "359:\tlearn: 0.3702894\ttotal: 21.2s\tremaining: 37.6s\n",
      "360:\tlearn: 0.3700660\ttotal: 21.2s\tremaining: 37.6s\n",
      "361:\tlearn: 0.3698537\ttotal: 21.3s\tremaining: 37.5s\n",
      "362:\tlearn: 0.3697271\ttotal: 21.4s\tremaining: 37.5s\n",
      "363:\tlearn: 0.3694382\ttotal: 21.4s\tremaining: 37.4s\n",
      "364:\tlearn: 0.3692321\ttotal: 21.5s\tremaining: 37.4s\n",
      "365:\tlearn: 0.3690785\ttotal: 21.5s\tremaining: 37.3s\n",
      "366:\tlearn: 0.3687102\ttotal: 21.6s\tremaining: 37.3s\n",
      "367:\tlearn: 0.3684340\ttotal: 21.7s\tremaining: 37.3s\n",
      "368:\tlearn: 0.3682257\ttotal: 21.8s\tremaining: 37.2s\n",
      "369:\tlearn: 0.3679471\ttotal: 21.8s\tremaining: 37.2s\n",
      "370:\tlearn: 0.3677734\ttotal: 21.9s\tremaining: 37.1s\n",
      "371:\tlearn: 0.3676358\ttotal: 22s\tremaining: 37.1s\n",
      "372:\tlearn: 0.3673990\ttotal: 22.1s\tremaining: 37.1s\n",
      "373:\tlearn: 0.3673000\ttotal: 22.1s\tremaining: 37s\n",
      "374:\tlearn: 0.3671026\ttotal: 22.2s\tremaining: 37s\n",
      "375:\tlearn: 0.3669949\ttotal: 22.2s\tremaining: 36.9s\n",
      "376:\tlearn: 0.3666670\ttotal: 22.3s\tremaining: 36.9s\n",
      "377:\tlearn: 0.3662932\ttotal: 22.4s\tremaining: 36.8s\n",
      "378:\tlearn: 0.3660761\ttotal: 22.4s\tremaining: 36.8s\n",
      "379:\tlearn: 0.3658373\ttotal: 22.5s\tremaining: 36.7s\n",
      "380:\tlearn: 0.3656548\ttotal: 22.6s\tremaining: 36.6s\n",
      "381:\tlearn: 0.3654774\ttotal: 22.6s\tremaining: 36.6s\n",
      "382:\tlearn: 0.3651439\ttotal: 22.7s\tremaining: 36.5s\n",
      "383:\tlearn: 0.3649731\ttotal: 22.7s\tremaining: 36.5s\n",
      "384:\tlearn: 0.3648063\ttotal: 22.8s\tremaining: 36.4s\n",
      "385:\tlearn: 0.3645274\ttotal: 22.9s\tremaining: 36.4s\n",
      "386:\tlearn: 0.3643479\ttotal: 22.9s\tremaining: 36.3s\n",
      "387:\tlearn: 0.3641828\ttotal: 23s\tremaining: 36.3s\n",
      "388:\tlearn: 0.3638347\ttotal: 23.1s\tremaining: 36.2s\n",
      "389:\tlearn: 0.3636189\ttotal: 23.1s\tremaining: 36.2s\n",
      "390:\tlearn: 0.3633791\ttotal: 23.2s\tremaining: 36.1s\n",
      "391:\tlearn: 0.3631509\ttotal: 23.3s\tremaining: 36.1s\n",
      "392:\tlearn: 0.3629695\ttotal: 23.3s\tremaining: 36s\n",
      "393:\tlearn: 0.3627453\ttotal: 23.4s\tremaining: 36s\n",
      "394:\tlearn: 0.3623700\ttotal: 23.5s\tremaining: 35.9s\n",
      "395:\tlearn: 0.3621699\ttotal: 23.5s\tremaining: 35.9s\n",
      "396:\tlearn: 0.3618006\ttotal: 23.6s\tremaining: 35.9s\n",
      "397:\tlearn: 0.3616320\ttotal: 23.7s\tremaining: 35.8s\n",
      "398:\tlearn: 0.3613944\ttotal: 23.7s\tremaining: 35.7s\n",
      "399:\tlearn: 0.3611192\ttotal: 23.8s\tremaining: 35.7s\n",
      "400:\tlearn: 0.3608014\ttotal: 23.8s\tremaining: 35.6s\n",
      "401:\tlearn: 0.3606410\ttotal: 23.9s\tremaining: 35.5s\n",
      "402:\tlearn: 0.3603843\ttotal: 23.9s\tremaining: 35.5s\n",
      "403:\tlearn: 0.3601626\ttotal: 24s\tremaining: 35.4s\n",
      "404:\tlearn: 0.3599838\ttotal: 24.1s\tremaining: 35.4s\n",
      "405:\tlearn: 0.3597939\ttotal: 24.1s\tremaining: 35.3s\n",
      "406:\tlearn: 0.3595933\ttotal: 24.2s\tremaining: 35.3s\n",
      "407:\tlearn: 0.3594404\ttotal: 24.3s\tremaining: 35.2s\n",
      "408:\tlearn: 0.3592569\ttotal: 24.3s\tremaining: 35.1s\n",
      "409:\tlearn: 0.3591024\ttotal: 24.4s\tremaining: 35.1s\n",
      "410:\tlearn: 0.3589446\ttotal: 24.4s\tremaining: 35s\n",
      "411:\tlearn: 0.3588110\ttotal: 24.5s\tremaining: 34.9s\n",
      "412:\tlearn: 0.3585227\ttotal: 24.6s\tremaining: 34.9s\n",
      "413:\tlearn: 0.3582971\ttotal: 24.6s\tremaining: 34.9s\n",
      "414:\tlearn: 0.3579168\ttotal: 24.7s\tremaining: 34.8s\n",
      "415:\tlearn: 0.3578156\ttotal: 24.8s\tremaining: 34.8s\n",
      "416:\tlearn: 0.3575507\ttotal: 24.9s\tremaining: 34.8s\n",
      "417:\tlearn: 0.3573029\ttotal: 24.9s\tremaining: 34.7s\n",
      "418:\tlearn: 0.3571589\ttotal: 25s\tremaining: 34.7s\n",
      "419:\tlearn: 0.3568866\ttotal: 25.1s\tremaining: 34.6s\n",
      "420:\tlearn: 0.3566920\ttotal: 25.1s\tremaining: 34.6s\n",
      "421:\tlearn: 0.3565593\ttotal: 25.2s\tremaining: 34.5s\n",
      "422:\tlearn: 0.3562299\ttotal: 25.3s\tremaining: 34.5s\n",
      "423:\tlearn: 0.3560935\ttotal: 25.3s\tremaining: 34.4s\n",
      "424:\tlearn: 0.3558822\ttotal: 25.4s\tremaining: 34.3s\n",
      "425:\tlearn: 0.3557493\ttotal: 25.4s\tremaining: 34.3s\n",
      "426:\tlearn: 0.3555361\ttotal: 25.5s\tremaining: 34.2s\n",
      "427:\tlearn: 0.3553924\ttotal: 25.5s\tremaining: 34.1s\n",
      "428:\tlearn: 0.3552692\ttotal: 25.6s\tremaining: 34.1s\n",
      "429:\tlearn: 0.3551666\ttotal: 25.7s\tremaining: 34s\n",
      "430:\tlearn: 0.3549485\ttotal: 25.7s\tremaining: 34s\n",
      "431:\tlearn: 0.3547509\ttotal: 25.8s\tremaining: 33.9s\n",
      "432:\tlearn: 0.3546287\ttotal: 25.8s\tremaining: 33.8s\n",
      "433:\tlearn: 0.3544784\ttotal: 25.9s\tremaining: 33.8s\n",
      "434:\tlearn: 0.3542364\ttotal: 26s\tremaining: 33.7s\n",
      "435:\tlearn: 0.3540235\ttotal: 26s\tremaining: 33.7s\n",
      "436:\tlearn: 0.3538819\ttotal: 26.1s\tremaining: 33.6s\n",
      "437:\tlearn: 0.3535306\ttotal: 26.2s\tremaining: 33.6s\n",
      "438:\tlearn: 0.3533692\ttotal: 26.2s\tremaining: 33.5s\n",
      "439:\tlearn: 0.3532274\ttotal: 26.3s\tremaining: 33.5s\n",
      "440:\tlearn: 0.3530420\ttotal: 26.4s\tremaining: 33.4s\n",
      "441:\tlearn: 0.3528168\ttotal: 26.4s\tremaining: 33.4s\n",
      "442:\tlearn: 0.3526117\ttotal: 26.5s\tremaining: 33.3s\n",
      "443:\tlearn: 0.3525563\ttotal: 26.5s\tremaining: 33.2s\n",
      "444:\tlearn: 0.3523487\ttotal: 26.6s\tremaining: 33.2s\n",
      "445:\tlearn: 0.3521065\ttotal: 26.7s\tremaining: 33.1s\n",
      "446:\tlearn: 0.3519707\ttotal: 26.7s\tremaining: 33.1s\n",
      "447:\tlearn: 0.3518479\ttotal: 26.8s\tremaining: 33s\n",
      "448:\tlearn: 0.3516824\ttotal: 26.8s\tremaining: 32.9s\n",
      "449:\tlearn: 0.3515910\ttotal: 26.9s\tremaining: 32.9s\n",
      "450:\tlearn: 0.3514174\ttotal: 27s\tremaining: 32.8s\n",
      "451:\tlearn: 0.3512685\ttotal: 27s\tremaining: 32.8s\n",
      "452:\tlearn: 0.3509913\ttotal: 27.1s\tremaining: 32.7s\n",
      "453:\tlearn: 0.3508662\ttotal: 27.2s\tremaining: 32.7s\n",
      "454:\tlearn: 0.3506501\ttotal: 27.2s\tremaining: 32.6s\n",
      "455:\tlearn: 0.3504518\ttotal: 27.3s\tremaining: 32.6s\n",
      "456:\tlearn: 0.3501340\ttotal: 27.4s\tremaining: 32.5s\n",
      "457:\tlearn: 0.3500401\ttotal: 27.4s\tremaining: 32.5s\n",
      "458:\tlearn: 0.3499756\ttotal: 27.5s\tremaining: 32.4s\n",
      "459:\tlearn: 0.3497491\ttotal: 27.5s\tremaining: 32.3s\n",
      "460:\tlearn: 0.3496438\ttotal: 27.6s\tremaining: 32.3s\n",
      "461:\tlearn: 0.3495245\ttotal: 27.7s\tremaining: 32.2s\n",
      "462:\tlearn: 0.3493811\ttotal: 27.7s\tremaining: 32.2s\n",
      "463:\tlearn: 0.3492692\ttotal: 27.8s\tremaining: 32.1s\n",
      "464:\tlearn: 0.3490475\ttotal: 27.8s\tremaining: 32s\n",
      "465:\tlearn: 0.3488241\ttotal: 27.9s\tremaining: 32s\n",
      "466:\tlearn: 0.3485826\ttotal: 28s\tremaining: 31.9s\n",
      "467:\tlearn: 0.3484224\ttotal: 28s\tremaining: 31.9s\n",
      "468:\tlearn: 0.3483187\ttotal: 28.1s\tremaining: 31.8s\n",
      "469:\tlearn: 0.3482082\ttotal: 28.2s\tremaining: 31.7s\n",
      "470:\tlearn: 0.3480589\ttotal: 28.2s\tremaining: 31.7s\n",
      "471:\tlearn: 0.3478554\ttotal: 28.3s\tremaining: 31.6s\n",
      "472:\tlearn: 0.3477027\ttotal: 28.4s\tremaining: 31.6s\n",
      "473:\tlearn: 0.3475852\ttotal: 28.4s\tremaining: 31.5s\n",
      "474:\tlearn: 0.3473521\ttotal: 28.5s\tremaining: 31.5s\n",
      "475:\tlearn: 0.3472281\ttotal: 28.5s\tremaining: 31.4s\n",
      "476:\tlearn: 0.3470080\ttotal: 28.6s\tremaining: 31.3s\n",
      "477:\tlearn: 0.3468093\ttotal: 28.6s\tremaining: 31.3s\n",
      "478:\tlearn: 0.3466019\ttotal: 28.7s\tremaining: 31.2s\n",
      "479:\tlearn: 0.3463617\ttotal: 28.8s\tremaining: 31.2s\n",
      "480:\tlearn: 0.3460820\ttotal: 28.8s\tremaining: 31.1s\n",
      "481:\tlearn: 0.3458832\ttotal: 28.9s\tremaining: 31s\n",
      "482:\tlearn: 0.3456924\ttotal: 28.9s\tremaining: 31s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "483:\tlearn: 0.3454443\ttotal: 29s\tremaining: 30.9s\n",
      "484:\tlearn: 0.3452535\ttotal: 29.1s\tremaining: 30.9s\n",
      "485:\tlearn: 0.3449765\ttotal: 29.1s\tremaining: 30.8s\n",
      "486:\tlearn: 0.3448095\ttotal: 29.2s\tremaining: 30.8s\n",
      "487:\tlearn: 0.3445251\ttotal: 29.3s\tremaining: 30.7s\n",
      "488:\tlearn: 0.3443240\ttotal: 29.3s\tremaining: 30.6s\n",
      "489:\tlearn: 0.3442245\ttotal: 29.4s\tremaining: 30.6s\n",
      "490:\tlearn: 0.3440458\ttotal: 29.4s\tremaining: 30.5s\n",
      "491:\tlearn: 0.3438041\ttotal: 29.5s\tremaining: 30.5s\n",
      "492:\tlearn: 0.3437089\ttotal: 29.6s\tremaining: 30.4s\n",
      "493:\tlearn: 0.3434594\ttotal: 29.6s\tremaining: 30.3s\n",
      "494:\tlearn: 0.3433162\ttotal: 29.7s\tremaining: 30.3s\n",
      "495:\tlearn: 0.3430085\ttotal: 29.7s\tremaining: 30.2s\n",
      "496:\tlearn: 0.3427661\ttotal: 29.8s\tremaining: 30.2s\n",
      "497:\tlearn: 0.3425202\ttotal: 29.9s\tremaining: 30.1s\n",
      "498:\tlearn: 0.3422808\ttotal: 29.9s\tremaining: 30.1s\n",
      "499:\tlearn: 0.3420236\ttotal: 30s\tremaining: 30s\n",
      "500:\tlearn: 0.3417944\ttotal: 30.1s\tremaining: 29.9s\n",
      "501:\tlearn: 0.3416004\ttotal: 30.1s\tremaining: 29.9s\n",
      "502:\tlearn: 0.3413364\ttotal: 30.2s\tremaining: 29.8s\n",
      "503:\tlearn: 0.3412192\ttotal: 30.2s\tremaining: 29.8s\n",
      "504:\tlearn: 0.3409698\ttotal: 30.3s\tremaining: 29.7s\n",
      "505:\tlearn: 0.3407549\ttotal: 30.4s\tremaining: 29.7s\n",
      "506:\tlearn: 0.3405344\ttotal: 30.4s\tremaining: 29.6s\n",
      "507:\tlearn: 0.3402070\ttotal: 30.5s\tremaining: 29.6s\n",
      "508:\tlearn: 0.3398916\ttotal: 30.6s\tremaining: 29.5s\n",
      "509:\tlearn: 0.3395753\ttotal: 30.6s\tremaining: 29.4s\n",
      "510:\tlearn: 0.3394134\ttotal: 30.7s\tremaining: 29.4s\n",
      "511:\tlearn: 0.3391167\ttotal: 30.8s\tremaining: 29.3s\n",
      "512:\tlearn: 0.3388949\ttotal: 30.8s\tremaining: 29.3s\n",
      "513:\tlearn: 0.3387572\ttotal: 30.9s\tremaining: 29.2s\n",
      "514:\tlearn: 0.3385762\ttotal: 31s\tremaining: 29.2s\n",
      "515:\tlearn: 0.3383023\ttotal: 31s\tremaining: 29.1s\n",
      "516:\tlearn: 0.3382039\ttotal: 31.1s\tremaining: 29s\n",
      "517:\tlearn: 0.3380506\ttotal: 31.1s\tremaining: 29s\n",
      "518:\tlearn: 0.3378308\ttotal: 31.2s\tremaining: 28.9s\n",
      "519:\tlearn: 0.3376562\ttotal: 31.3s\tremaining: 28.9s\n",
      "520:\tlearn: 0.3374881\ttotal: 31.3s\tremaining: 28.8s\n",
      "521:\tlearn: 0.3373651\ttotal: 31.4s\tremaining: 28.7s\n",
      "522:\tlearn: 0.3371825\ttotal: 31.4s\tremaining: 28.7s\n",
      "523:\tlearn: 0.3369846\ttotal: 31.5s\tremaining: 28.6s\n",
      "524:\tlearn: 0.3368136\ttotal: 31.6s\tremaining: 28.5s\n",
      "525:\tlearn: 0.3366625\ttotal: 31.6s\tremaining: 28.5s\n",
      "526:\tlearn: 0.3365128\ttotal: 31.7s\tremaining: 28.4s\n",
      "527:\tlearn: 0.3363321\ttotal: 31.7s\tremaining: 28.4s\n",
      "528:\tlearn: 0.3361710\ttotal: 31.8s\tremaining: 28.3s\n",
      "529:\tlearn: 0.3360983\ttotal: 31.8s\tremaining: 28.2s\n",
      "530:\tlearn: 0.3359044\ttotal: 31.9s\tremaining: 28.2s\n",
      "531:\tlearn: 0.3355097\ttotal: 32s\tremaining: 28.1s\n",
      "532:\tlearn: 0.3353100\ttotal: 32s\tremaining: 28.1s\n",
      "533:\tlearn: 0.3350485\ttotal: 32.1s\tremaining: 28s\n",
      "534:\tlearn: 0.3349084\ttotal: 32.1s\tremaining: 27.9s\n",
      "535:\tlearn: 0.3347794\ttotal: 32.2s\tremaining: 27.9s\n",
      "536:\tlearn: 0.3346290\ttotal: 32.3s\tremaining: 27.8s\n",
      "537:\tlearn: 0.3344643\ttotal: 32.3s\tremaining: 27.8s\n",
      "538:\tlearn: 0.3343402\ttotal: 32.4s\tremaining: 27.7s\n",
      "539:\tlearn: 0.3341858\ttotal: 32.4s\tremaining: 27.6s\n",
      "540:\tlearn: 0.3339831\ttotal: 32.5s\tremaining: 27.6s\n",
      "541:\tlearn: 0.3338722\ttotal: 32.6s\tremaining: 27.5s\n",
      "542:\tlearn: 0.3336689\ttotal: 32.6s\tremaining: 27.4s\n",
      "543:\tlearn: 0.3334818\ttotal: 32.7s\tremaining: 27.4s\n",
      "544:\tlearn: 0.3333082\ttotal: 32.7s\tremaining: 27.3s\n",
      "545:\tlearn: 0.3331109\ttotal: 32.8s\tremaining: 27.3s\n",
      "546:\tlearn: 0.3330539\ttotal: 32.8s\tremaining: 27.2s\n",
      "547:\tlearn: 0.3328588\ttotal: 32.9s\tremaining: 27.1s\n",
      "548:\tlearn: 0.3326543\ttotal: 33s\tremaining: 27.1s\n",
      "549:\tlearn: 0.3325620\ttotal: 33s\tremaining: 27s\n",
      "550:\tlearn: 0.3325063\ttotal: 33.1s\tremaining: 27s\n",
      "551:\tlearn: 0.3322932\ttotal: 33.1s\tremaining: 26.9s\n",
      "552:\tlearn: 0.3321472\ttotal: 33.2s\tremaining: 26.8s\n",
      "553:\tlearn: 0.3319733\ttotal: 33.3s\tremaining: 26.8s\n",
      "554:\tlearn: 0.3318096\ttotal: 33.3s\tremaining: 26.7s\n",
      "555:\tlearn: 0.3316807\ttotal: 33.4s\tremaining: 26.6s\n",
      "556:\tlearn: 0.3315755\ttotal: 33.4s\tremaining: 26.6s\n",
      "557:\tlearn: 0.3314496\ttotal: 33.5s\tremaining: 26.5s\n",
      "558:\tlearn: 0.3311903\ttotal: 33.5s\tremaining: 26.5s\n",
      "559:\tlearn: 0.3310020\ttotal: 33.6s\tremaining: 26.4s\n",
      "560:\tlearn: 0.3307660\ttotal: 33.7s\tremaining: 26.3s\n",
      "561:\tlearn: 0.3306826\ttotal: 33.7s\tremaining: 26.3s\n",
      "562:\tlearn: 0.3304621\ttotal: 33.8s\tremaining: 26.2s\n",
      "563:\tlearn: 0.3303052\ttotal: 33.8s\tremaining: 26.2s\n",
      "564:\tlearn: 0.3300267\ttotal: 33.9s\tremaining: 26.1s\n",
      "565:\tlearn: 0.3298817\ttotal: 34s\tremaining: 26s\n",
      "566:\tlearn: 0.3297889\ttotal: 34s\tremaining: 26s\n",
      "567:\tlearn: 0.3297014\ttotal: 34.1s\tremaining: 25.9s\n",
      "568:\tlearn: 0.3295181\ttotal: 34.2s\tremaining: 25.9s\n",
      "569:\tlearn: 0.3293130\ttotal: 34.2s\tremaining: 25.8s\n",
      "570:\tlearn: 0.3292178\ttotal: 34.3s\tremaining: 25.8s\n",
      "571:\tlearn: 0.3290683\ttotal: 34.3s\tremaining: 25.7s\n",
      "572:\tlearn: 0.3287069\ttotal: 34.4s\tremaining: 25.6s\n",
      "573:\tlearn: 0.3286064\ttotal: 34.5s\tremaining: 25.6s\n",
      "574:\tlearn: 0.3283958\ttotal: 34.5s\tremaining: 25.5s\n",
      "575:\tlearn: 0.3281680\ttotal: 34.6s\tremaining: 25.5s\n",
      "576:\tlearn: 0.3279423\ttotal: 34.6s\tremaining: 25.4s\n",
      "577:\tlearn: 0.3277750\ttotal: 34.7s\tremaining: 25.3s\n",
      "578:\tlearn: 0.3275996\ttotal: 34.8s\tremaining: 25.3s\n",
      "579:\tlearn: 0.3274328\ttotal: 34.8s\tremaining: 25.2s\n",
      "580:\tlearn: 0.3273642\ttotal: 34.9s\tremaining: 25.2s\n",
      "581:\tlearn: 0.3270513\ttotal: 34.9s\tremaining: 25.1s\n",
      "582:\tlearn: 0.3269225\ttotal: 35s\tremaining: 25s\n",
      "583:\tlearn: 0.3266997\ttotal: 35.1s\tremaining: 25s\n",
      "584:\tlearn: 0.3265435\ttotal: 35.1s\tremaining: 24.9s\n",
      "585:\tlearn: 0.3262583\ttotal: 35.2s\tremaining: 24.9s\n",
      "586:\tlearn: 0.3261687\ttotal: 35.2s\tremaining: 24.8s\n",
      "587:\tlearn: 0.3260319\ttotal: 35.3s\tremaining: 24.7s\n",
      "588:\tlearn: 0.3258902\ttotal: 35.4s\tremaining: 24.7s\n",
      "589:\tlearn: 0.3257221\ttotal: 35.4s\tremaining: 24.6s\n",
      "590:\tlearn: 0.3255617\ttotal: 35.5s\tremaining: 24.6s\n",
      "591:\tlearn: 0.3254047\ttotal: 35.5s\tremaining: 24.5s\n",
      "592:\tlearn: 0.3252927\ttotal: 35.6s\tremaining: 24.4s\n",
      "593:\tlearn: 0.3252402\ttotal: 35.6s\tremaining: 24.4s\n",
      "594:\tlearn: 0.3250919\ttotal: 35.7s\tremaining: 24.3s\n",
      "595:\tlearn: 0.3248859\ttotal: 35.8s\tremaining: 24.2s\n",
      "596:\tlearn: 0.3247576\ttotal: 35.8s\tremaining: 24.2s\n",
      "597:\tlearn: 0.3246669\ttotal: 35.9s\tremaining: 24.1s\n",
      "598:\tlearn: 0.3244595\ttotal: 35.9s\tremaining: 24.1s\n",
      "599:\tlearn: 0.3244039\ttotal: 36s\tremaining: 24s\n",
      "600:\tlearn: 0.3242022\ttotal: 36.1s\tremaining: 23.9s\n",
      "601:\tlearn: 0.3240389\ttotal: 36.1s\tremaining: 23.9s\n",
      "602:\tlearn: 0.3239009\ttotal: 36.2s\tremaining: 23.8s\n",
      "603:\tlearn: 0.3237041\ttotal: 36.2s\tremaining: 23.8s\n",
      "604:\tlearn: 0.3235437\ttotal: 36.3s\tremaining: 23.7s\n",
      "605:\tlearn: 0.3233996\ttotal: 36.3s\tremaining: 23.6s\n",
      "606:\tlearn: 0.3232771\ttotal: 36.4s\tremaining: 23.6s\n",
      "607:\tlearn: 0.3231197\ttotal: 36.5s\tremaining: 23.5s\n",
      "608:\tlearn: 0.3229970\ttotal: 36.5s\tremaining: 23.4s\n",
      "609:\tlearn: 0.3228705\ttotal: 36.6s\tremaining: 23.4s\n",
      "610:\tlearn: 0.3227435\ttotal: 36.6s\tremaining: 23.3s\n",
      "611:\tlearn: 0.3226519\ttotal: 36.7s\tremaining: 23.3s\n",
      "612:\tlearn: 0.3225221\ttotal: 36.8s\tremaining: 23.2s\n",
      "613:\tlearn: 0.3223883\ttotal: 36.8s\tremaining: 23.1s\n",
      "614:\tlearn: 0.3222199\ttotal: 36.9s\tremaining: 23.1s\n",
      "615:\tlearn: 0.3221050\ttotal: 36.9s\tremaining: 23s\n",
      "616:\tlearn: 0.3219238\ttotal: 37s\tremaining: 23s\n",
      "617:\tlearn: 0.3217383\ttotal: 37s\tremaining: 22.9s\n",
      "618:\tlearn: 0.3215588\ttotal: 37.1s\tremaining: 22.8s\n",
      "619:\tlearn: 0.3213983\ttotal: 37.2s\tremaining: 22.8s\n",
      "620:\tlearn: 0.3213195\ttotal: 37.2s\tremaining: 22.7s\n",
      "621:\tlearn: 0.3211928\ttotal: 37.3s\tremaining: 22.7s\n",
      "622:\tlearn: 0.3210987\ttotal: 37.3s\tremaining: 22.6s\n",
      "623:\tlearn: 0.3209201\ttotal: 37.4s\tremaining: 22.5s\n",
      "624:\tlearn: 0.3206813\ttotal: 37.5s\tremaining: 22.5s\n",
      "625:\tlearn: 0.3206093\ttotal: 37.5s\tremaining: 22.4s\n",
      "626:\tlearn: 0.3203872\ttotal: 37.6s\tremaining: 22.4s\n",
      "627:\tlearn: 0.3202939\ttotal: 37.6s\tremaining: 22.3s\n",
      "628:\tlearn: 0.3201129\ttotal: 37.7s\tremaining: 22.2s\n",
      "629:\tlearn: 0.3198457\ttotal: 37.8s\tremaining: 22.2s\n",
      "630:\tlearn: 0.3197196\ttotal: 37.8s\tremaining: 22.1s\n",
      "631:\tlearn: 0.3196117\ttotal: 37.9s\tremaining: 22.1s\n",
      "632:\tlearn: 0.3193926\ttotal: 38s\tremaining: 22s\n",
      "633:\tlearn: 0.3193021\ttotal: 38s\tremaining: 21.9s\n",
      "634:\tlearn: 0.3190515\ttotal: 38.1s\tremaining: 21.9s\n",
      "635:\tlearn: 0.3189053\ttotal: 38.1s\tremaining: 21.8s\n",
      "636:\tlearn: 0.3187116\ttotal: 38.2s\tremaining: 21.8s\n",
      "637:\tlearn: 0.3185817\ttotal: 38.3s\tremaining: 21.7s\n",
      "638:\tlearn: 0.3184542\ttotal: 38.3s\tremaining: 21.7s\n",
      "639:\tlearn: 0.3183130\ttotal: 38.4s\tremaining: 21.6s\n",
      "640:\tlearn: 0.3181775\ttotal: 38.5s\tremaining: 21.5s\n",
      "641:\tlearn: 0.3179344\ttotal: 38.5s\tremaining: 21.5s\n",
      "642:\tlearn: 0.3177456\ttotal: 38.6s\tremaining: 21.4s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "643:\tlearn: 0.3175778\ttotal: 38.7s\tremaining: 21.4s\n",
      "644:\tlearn: 0.3173622\ttotal: 38.7s\tremaining: 21.3s\n",
      "645:\tlearn: 0.3172099\ttotal: 38.8s\tremaining: 21.3s\n",
      "646:\tlearn: 0.3171239\ttotal: 38.8s\tremaining: 21.2s\n",
      "647:\tlearn: 0.3169990\ttotal: 38.9s\tremaining: 21.1s\n",
      "648:\tlearn: 0.3168990\ttotal: 38.9s\tremaining: 21.1s\n",
      "649:\tlearn: 0.3167493\ttotal: 39s\tremaining: 21s\n",
      "650:\tlearn: 0.3166262\ttotal: 39.1s\tremaining: 20.9s\n",
      "651:\tlearn: 0.3163514\ttotal: 39.1s\tremaining: 20.9s\n",
      "652:\tlearn: 0.3161628\ttotal: 39.2s\tremaining: 20.8s\n",
      "653:\tlearn: 0.3160372\ttotal: 39.3s\tremaining: 20.8s\n",
      "654:\tlearn: 0.3159744\ttotal: 39.3s\tremaining: 20.7s\n",
      "655:\tlearn: 0.3158226\ttotal: 39.4s\tremaining: 20.6s\n",
      "656:\tlearn: 0.3156226\ttotal: 39.4s\tremaining: 20.6s\n",
      "657:\tlearn: 0.3153955\ttotal: 39.5s\tremaining: 20.5s\n",
      "658:\tlearn: 0.3152458\ttotal: 39.6s\tremaining: 20.5s\n",
      "659:\tlearn: 0.3151080\ttotal: 39.6s\tremaining: 20.4s\n",
      "660:\tlearn: 0.3148996\ttotal: 39.7s\tremaining: 20.3s\n",
      "661:\tlearn: 0.3147103\ttotal: 39.7s\tremaining: 20.3s\n",
      "662:\tlearn: 0.3145762\ttotal: 39.8s\tremaining: 20.2s\n",
      "663:\tlearn: 0.3143773\ttotal: 39.9s\tremaining: 20.2s\n",
      "664:\tlearn: 0.3142293\ttotal: 39.9s\tremaining: 20.1s\n",
      "665:\tlearn: 0.3141425\ttotal: 40s\tremaining: 20s\n",
      "666:\tlearn: 0.3139491\ttotal: 40s\tremaining: 20s\n",
      "667:\tlearn: 0.3138639\ttotal: 40.1s\tremaining: 19.9s\n",
      "668:\tlearn: 0.3137158\ttotal: 40.2s\tremaining: 19.9s\n",
      "669:\tlearn: 0.3136128\ttotal: 40.2s\tremaining: 19.8s\n",
      "670:\tlearn: 0.3134664\ttotal: 40.3s\tremaining: 19.7s\n",
      "671:\tlearn: 0.3132249\ttotal: 40.3s\tremaining: 19.7s\n",
      "672:\tlearn: 0.3130329\ttotal: 40.4s\tremaining: 19.6s\n",
      "673:\tlearn: 0.3128997\ttotal: 40.5s\tremaining: 19.6s\n",
      "674:\tlearn: 0.3128050\ttotal: 40.5s\tremaining: 19.5s\n",
      "675:\tlearn: 0.3126054\ttotal: 40.6s\tremaining: 19.4s\n",
      "676:\tlearn: 0.3123232\ttotal: 40.6s\tremaining: 19.4s\n",
      "677:\tlearn: 0.3121088\ttotal: 40.7s\tremaining: 19.3s\n",
      "678:\tlearn: 0.3119937\ttotal: 40.8s\tremaining: 19.3s\n",
      "679:\tlearn: 0.3117617\ttotal: 40.8s\tremaining: 19.2s\n",
      "680:\tlearn: 0.3115408\ttotal: 40.9s\tremaining: 19.1s\n",
      "681:\tlearn: 0.3114424\ttotal: 40.9s\tremaining: 19.1s\n",
      "682:\tlearn: 0.3112201\ttotal: 41s\tremaining: 19s\n",
      "683:\tlearn: 0.3110816\ttotal: 41.1s\tremaining: 19s\n",
      "684:\tlearn: 0.3108688\ttotal: 41.1s\tremaining: 18.9s\n",
      "685:\tlearn: 0.3107735\ttotal: 41.2s\tremaining: 18.8s\n",
      "686:\tlearn: 0.3106393\ttotal: 41.2s\tremaining: 18.8s\n",
      "687:\tlearn: 0.3105476\ttotal: 41.3s\tremaining: 18.7s\n",
      "688:\tlearn: 0.3103841\ttotal: 41.4s\tremaining: 18.7s\n",
      "689:\tlearn: 0.3102049\ttotal: 41.4s\tremaining: 18.6s\n",
      "690:\tlearn: 0.3100927\ttotal: 41.5s\tremaining: 18.6s\n",
      "691:\tlearn: 0.3099936\ttotal: 41.6s\tremaining: 18.5s\n",
      "692:\tlearn: 0.3097766\ttotal: 41.6s\tremaining: 18.4s\n",
      "693:\tlearn: 0.3096016\ttotal: 41.7s\tremaining: 18.4s\n",
      "694:\tlearn: 0.3094733\ttotal: 41.7s\tremaining: 18.3s\n",
      "695:\tlearn: 0.3093489\ttotal: 41.8s\tremaining: 18.3s\n",
      "696:\tlearn: 0.3092451\ttotal: 41.9s\tremaining: 18.2s\n",
      "697:\tlearn: 0.3090125\ttotal: 41.9s\tremaining: 18.1s\n",
      "698:\tlearn: 0.3088397\ttotal: 42s\tremaining: 18.1s\n",
      "699:\tlearn: 0.3085842\ttotal: 42.1s\tremaining: 18s\n",
      "700:\tlearn: 0.3084755\ttotal: 42.1s\tremaining: 18s\n",
      "701:\tlearn: 0.3083562\ttotal: 42.2s\tremaining: 17.9s\n",
      "702:\tlearn: 0.3082171\ttotal: 42.2s\tremaining: 17.8s\n",
      "703:\tlearn: 0.3081245\ttotal: 42.3s\tremaining: 17.8s\n",
      "704:\tlearn: 0.3079773\ttotal: 42.3s\tremaining: 17.7s\n",
      "705:\tlearn: 0.3077873\ttotal: 42.4s\tremaining: 17.7s\n",
      "706:\tlearn: 0.3076155\ttotal: 42.5s\tremaining: 17.6s\n",
      "707:\tlearn: 0.3074439\ttotal: 42.5s\tremaining: 17.5s\n",
      "708:\tlearn: 0.3073299\ttotal: 42.6s\tremaining: 17.5s\n",
      "709:\tlearn: 0.3070840\ttotal: 42.6s\tremaining: 17.4s\n",
      "710:\tlearn: 0.3069155\ttotal: 42.7s\tremaining: 17.4s\n",
      "711:\tlearn: 0.3067578\ttotal: 42.8s\tremaining: 17.3s\n",
      "712:\tlearn: 0.3066076\ttotal: 42.8s\tremaining: 17.2s\n",
      "713:\tlearn: 0.3064327\ttotal: 42.9s\tremaining: 17.2s\n",
      "714:\tlearn: 0.3063466\ttotal: 42.9s\tremaining: 17.1s\n",
      "715:\tlearn: 0.3061267\ttotal: 43s\tremaining: 17.1s\n",
      "716:\tlearn: 0.3059839\ttotal: 43.1s\tremaining: 17s\n",
      "717:\tlearn: 0.3057578\ttotal: 43.2s\tremaining: 16.9s\n",
      "718:\tlearn: 0.3055932\ttotal: 43.2s\tremaining: 16.9s\n",
      "719:\tlearn: 0.3054680\ttotal: 43.3s\tremaining: 16.8s\n",
      "720:\tlearn: 0.3052453\ttotal: 43.3s\tremaining: 16.8s\n",
      "721:\tlearn: 0.3051809\ttotal: 43.4s\tremaining: 16.7s\n",
      "722:\tlearn: 0.3050847\ttotal: 43.5s\tremaining: 16.6s\n",
      "723:\tlearn: 0.3049853\ttotal: 43.5s\tremaining: 16.6s\n",
      "724:\tlearn: 0.3047996\ttotal: 43.6s\tremaining: 16.5s\n",
      "725:\tlearn: 0.3046554\ttotal: 43.7s\tremaining: 16.5s\n",
      "726:\tlearn: 0.3045693\ttotal: 43.8s\tremaining: 16.4s\n",
      "727:\tlearn: 0.3044125\ttotal: 43.9s\tremaining: 16.4s\n",
      "728:\tlearn: 0.3042059\ttotal: 43.9s\tremaining: 16.3s\n",
      "729:\tlearn: 0.3040564\ttotal: 44s\tremaining: 16.3s\n",
      "730:\tlearn: 0.3039263\ttotal: 44.1s\tremaining: 16.2s\n",
      "731:\tlearn: 0.3038028\ttotal: 44.1s\tremaining: 16.2s\n",
      "732:\tlearn: 0.3037474\ttotal: 44.2s\tremaining: 16.1s\n",
      "733:\tlearn: 0.3035887\ttotal: 44.2s\tremaining: 16s\n",
      "734:\tlearn: 0.3034752\ttotal: 44.3s\tremaining: 16s\n",
      "735:\tlearn: 0.3032433\ttotal: 44.4s\tremaining: 15.9s\n",
      "736:\tlearn: 0.3031055\ttotal: 44.4s\tremaining: 15.9s\n",
      "737:\tlearn: 0.3030594\ttotal: 44.5s\tremaining: 15.8s\n",
      "738:\tlearn: 0.3028671\ttotal: 44.6s\tremaining: 15.8s\n",
      "739:\tlearn: 0.3027622\ttotal: 44.7s\tremaining: 15.7s\n",
      "740:\tlearn: 0.3027090\ttotal: 44.7s\tremaining: 15.6s\n",
      "741:\tlearn: 0.3024551\ttotal: 44.8s\tremaining: 15.6s\n",
      "742:\tlearn: 0.3023347\ttotal: 44.9s\tremaining: 15.5s\n",
      "743:\tlearn: 0.3022009\ttotal: 44.9s\tremaining: 15.5s\n",
      "744:\tlearn: 0.3019989\ttotal: 45s\tremaining: 15.4s\n",
      "745:\tlearn: 0.3016982\ttotal: 45.1s\tremaining: 15.3s\n",
      "746:\tlearn: 0.3015663\ttotal: 45.1s\tremaining: 15.3s\n",
      "747:\tlearn: 0.3014465\ttotal: 45.2s\tremaining: 15.2s\n",
      "748:\tlearn: 0.3012452\ttotal: 45.3s\tremaining: 15.2s\n",
      "749:\tlearn: 0.3011633\ttotal: 45.3s\tremaining: 15.1s\n",
      "750:\tlearn: 0.3010168\ttotal: 45.4s\tremaining: 15.1s\n",
      "751:\tlearn: 0.3008839\ttotal: 45.5s\tremaining: 15s\n",
      "752:\tlearn: 0.3006981\ttotal: 45.6s\tremaining: 14.9s\n",
      "753:\tlearn: 0.3005865\ttotal: 45.6s\tremaining: 14.9s\n",
      "754:\tlearn: 0.3003927\ttotal: 45.7s\tremaining: 14.8s\n",
      "755:\tlearn: 0.3002307\ttotal: 45.7s\tremaining: 14.8s\n",
      "756:\tlearn: 0.3000273\ttotal: 45.8s\tremaining: 14.7s\n",
      "757:\tlearn: 0.2999128\ttotal: 45.9s\tremaining: 14.6s\n",
      "758:\tlearn: 0.2997721\ttotal: 46s\tremaining: 14.6s\n",
      "759:\tlearn: 0.2996738\ttotal: 46s\tremaining: 14.5s\n",
      "760:\tlearn: 0.2995685\ttotal: 46.1s\tremaining: 14.5s\n",
      "761:\tlearn: 0.2994962\ttotal: 46.1s\tremaining: 14.4s\n",
      "762:\tlearn: 0.2993793\ttotal: 46.2s\tremaining: 14.3s\n",
      "763:\tlearn: 0.2992339\ttotal: 46.2s\tremaining: 14.3s\n",
      "764:\tlearn: 0.2990731\ttotal: 46.3s\tremaining: 14.2s\n",
      "765:\tlearn: 0.2989922\ttotal: 46.4s\tremaining: 14.2s\n",
      "766:\tlearn: 0.2988487\ttotal: 46.4s\tremaining: 14.1s\n",
      "767:\tlearn: 0.2985938\ttotal: 46.5s\tremaining: 14s\n",
      "768:\tlearn: 0.2984386\ttotal: 46.6s\tremaining: 14s\n",
      "769:\tlearn: 0.2982103\ttotal: 46.6s\tremaining: 13.9s\n",
      "770:\tlearn: 0.2980636\ttotal: 46.7s\tremaining: 13.9s\n",
      "771:\tlearn: 0.2978491\ttotal: 46.8s\tremaining: 13.8s\n",
      "772:\tlearn: 0.2977031\ttotal: 46.8s\tremaining: 13.7s\n",
      "773:\tlearn: 0.2976314\ttotal: 46.9s\tremaining: 13.7s\n",
      "774:\tlearn: 0.2974756\ttotal: 46.9s\tremaining: 13.6s\n",
      "775:\tlearn: 0.2973486\ttotal: 47s\tremaining: 13.6s\n",
      "776:\tlearn: 0.2972583\ttotal: 47.1s\tremaining: 13.5s\n",
      "777:\tlearn: 0.2971452\ttotal: 47.1s\tremaining: 13.4s\n",
      "778:\tlearn: 0.2969752\ttotal: 47.2s\tremaining: 13.4s\n",
      "779:\tlearn: 0.2968386\ttotal: 47.2s\tremaining: 13.3s\n",
      "780:\tlearn: 0.2966838\ttotal: 47.3s\tremaining: 13.3s\n",
      "781:\tlearn: 0.2965856\ttotal: 47.3s\tremaining: 13.2s\n",
      "782:\tlearn: 0.2964983\ttotal: 47.4s\tremaining: 13.1s\n",
      "783:\tlearn: 0.2964038\ttotal: 47.5s\tremaining: 13.1s\n",
      "784:\tlearn: 0.2962558\ttotal: 47.5s\tremaining: 13s\n",
      "785:\tlearn: 0.2961612\ttotal: 47.6s\tremaining: 13s\n",
      "786:\tlearn: 0.2959959\ttotal: 47.6s\tremaining: 12.9s\n",
      "787:\tlearn: 0.2958062\ttotal: 47.7s\tremaining: 12.8s\n",
      "788:\tlearn: 0.2955855\ttotal: 47.8s\tremaining: 12.8s\n",
      "789:\tlearn: 0.2954186\ttotal: 47.8s\tremaining: 12.7s\n",
      "790:\tlearn: 0.2952582\ttotal: 47.9s\tremaining: 12.7s\n",
      "791:\tlearn: 0.2951582\ttotal: 47.9s\tremaining: 12.6s\n",
      "792:\tlearn: 0.2950484\ttotal: 48s\tremaining: 12.5s\n",
      "793:\tlearn: 0.2949473\ttotal: 48s\tremaining: 12.5s\n",
      "794:\tlearn: 0.2947353\ttotal: 48.1s\tremaining: 12.4s\n",
      "795:\tlearn: 0.2946523\ttotal: 48.2s\tremaining: 12.3s\n",
      "796:\tlearn: 0.2945446\ttotal: 48.2s\tremaining: 12.3s\n",
      "797:\tlearn: 0.2944726\ttotal: 48.3s\tremaining: 12.2s\n",
      "798:\tlearn: 0.2943719\ttotal: 48.3s\tremaining: 12.2s\n",
      "799:\tlearn: 0.2942336\ttotal: 48.4s\tremaining: 12.1s\n",
      "800:\tlearn: 0.2940325\ttotal: 48.5s\tremaining: 12s\n",
      "801:\tlearn: 0.2939564\ttotal: 48.5s\tremaining: 12s\n",
      "802:\tlearn: 0.2938203\ttotal: 48.6s\tremaining: 11.9s\n",
      "803:\tlearn: 0.2937371\ttotal: 48.6s\tremaining: 11.9s\n",
      "804:\tlearn: 0.2936582\ttotal: 48.7s\tremaining: 11.8s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "805:\tlearn: 0.2934818\ttotal: 48.8s\tremaining: 11.7s\n",
      "806:\tlearn: 0.2934114\ttotal: 48.8s\tremaining: 11.7s\n",
      "807:\tlearn: 0.2933118\ttotal: 48.9s\tremaining: 11.6s\n",
      "808:\tlearn: 0.2932085\ttotal: 48.9s\tremaining: 11.6s\n",
      "809:\tlearn: 0.2929880\ttotal: 49s\tremaining: 11.5s\n",
      "810:\tlearn: 0.2927579\ttotal: 49.1s\tremaining: 11.4s\n",
      "811:\tlearn: 0.2926690\ttotal: 49.1s\tremaining: 11.4s\n",
      "812:\tlearn: 0.2925820\ttotal: 49.2s\tremaining: 11.3s\n",
      "813:\tlearn: 0.2925001\ttotal: 49.3s\tremaining: 11.3s\n",
      "814:\tlearn: 0.2924275\ttotal: 49.3s\tremaining: 11.2s\n",
      "815:\tlearn: 0.2923296\ttotal: 49.4s\tremaining: 11.1s\n",
      "816:\tlearn: 0.2922455\ttotal: 49.4s\tremaining: 11.1s\n",
      "817:\tlearn: 0.2921033\ttotal: 49.5s\tremaining: 11s\n",
      "818:\tlearn: 0.2919637\ttotal: 49.6s\tremaining: 11s\n",
      "819:\tlearn: 0.2918739\ttotal: 49.6s\tremaining: 10.9s\n",
      "820:\tlearn: 0.2918347\ttotal: 49.7s\tremaining: 10.8s\n",
      "821:\tlearn: 0.2916593\ttotal: 49.7s\tremaining: 10.8s\n",
      "822:\tlearn: 0.2914902\ttotal: 49.8s\tremaining: 10.7s\n",
      "823:\tlearn: 0.2914254\ttotal: 49.9s\tremaining: 10.6s\n",
      "824:\tlearn: 0.2913028\ttotal: 49.9s\tremaining: 10.6s\n",
      "825:\tlearn: 0.2912173\ttotal: 50s\tremaining: 10.5s\n",
      "826:\tlearn: 0.2911112\ttotal: 50s\tremaining: 10.5s\n",
      "827:\tlearn: 0.2909570\ttotal: 50.1s\tremaining: 10.4s\n",
      "828:\tlearn: 0.2908634\ttotal: 50.2s\tremaining: 10.3s\n",
      "829:\tlearn: 0.2907491\ttotal: 50.2s\tremaining: 10.3s\n",
      "830:\tlearn: 0.2906952\ttotal: 50.3s\tremaining: 10.2s\n",
      "831:\tlearn: 0.2905339\ttotal: 50.3s\tremaining: 10.2s\n",
      "832:\tlearn: 0.2903265\ttotal: 50.4s\tremaining: 10.1s\n",
      "833:\tlearn: 0.2902244\ttotal: 50.5s\tremaining: 10s\n",
      "834:\tlearn: 0.2901183\ttotal: 50.5s\tremaining: 9.98s\n",
      "835:\tlearn: 0.2900414\ttotal: 50.6s\tremaining: 9.92s\n",
      "836:\tlearn: 0.2898583\ttotal: 50.6s\tremaining: 9.86s\n",
      "837:\tlearn: 0.2897306\ttotal: 50.7s\tremaining: 9.8s\n",
      "838:\tlearn: 0.2896675\ttotal: 50.7s\tremaining: 9.74s\n",
      "839:\tlearn: 0.2895022\ttotal: 50.8s\tremaining: 9.68s\n",
      "840:\tlearn: 0.2892697\ttotal: 50.9s\tremaining: 9.61s\n",
      "841:\tlearn: 0.2890666\ttotal: 50.9s\tremaining: 9.55s\n",
      "842:\tlearn: 0.2888303\ttotal: 51s\tremaining: 9.49s\n",
      "843:\tlearn: 0.2886626\ttotal: 51s\tremaining: 9.43s\n",
      "844:\tlearn: 0.2886139\ttotal: 51.1s\tremaining: 9.37s\n",
      "845:\tlearn: 0.2885164\ttotal: 51.1s\tremaining: 9.31s\n",
      "846:\tlearn: 0.2882700\ttotal: 51.2s\tremaining: 9.25s\n",
      "847:\tlearn: 0.2881704\ttotal: 51.3s\tremaining: 9.19s\n",
      "848:\tlearn: 0.2880987\ttotal: 51.3s\tremaining: 9.13s\n",
      "849:\tlearn: 0.2879791\ttotal: 51.4s\tremaining: 9.07s\n",
      "850:\tlearn: 0.2879127\ttotal: 51.4s\tremaining: 9.01s\n",
      "851:\tlearn: 0.2877984\ttotal: 51.5s\tremaining: 8.95s\n",
      "852:\tlearn: 0.2876240\ttotal: 51.6s\tremaining: 8.88s\n",
      "853:\tlearn: 0.2874468\ttotal: 51.6s\tremaining: 8.82s\n",
      "854:\tlearn: 0.2873343\ttotal: 51.7s\tremaining: 8.76s\n",
      "855:\tlearn: 0.2872143\ttotal: 51.7s\tremaining: 8.7s\n",
      "856:\tlearn: 0.2870352\ttotal: 51.8s\tremaining: 8.64s\n",
      "857:\tlearn: 0.2868880\ttotal: 51.8s\tremaining: 8.58s\n",
      "858:\tlearn: 0.2867599\ttotal: 51.9s\tremaining: 8.52s\n",
      "859:\tlearn: 0.2865856\ttotal: 52s\tremaining: 8.46s\n",
      "860:\tlearn: 0.2864228\ttotal: 52s\tremaining: 8.4s\n",
      "861:\tlearn: 0.2863339\ttotal: 52.1s\tremaining: 8.34s\n",
      "862:\tlearn: 0.2862310\ttotal: 52.1s\tremaining: 8.28s\n",
      "863:\tlearn: 0.2861546\ttotal: 52.2s\tremaining: 8.22s\n",
      "864:\tlearn: 0.2860153\ttotal: 52.3s\tremaining: 8.16s\n",
      "865:\tlearn: 0.2859206\ttotal: 52.3s\tremaining: 8.1s\n",
      "866:\tlearn: 0.2858192\ttotal: 52.4s\tremaining: 8.04s\n",
      "867:\tlearn: 0.2857198\ttotal: 52.4s\tremaining: 7.97s\n",
      "868:\tlearn: 0.2855797\ttotal: 52.5s\tremaining: 7.91s\n",
      "869:\tlearn: 0.2853962\ttotal: 52.6s\tremaining: 7.85s\n",
      "870:\tlearn: 0.2853012\ttotal: 52.6s\tremaining: 7.8s\n",
      "871:\tlearn: 0.2851774\ttotal: 52.7s\tremaining: 7.74s\n",
      "872:\tlearn: 0.2850154\ttotal: 52.8s\tremaining: 7.67s\n",
      "873:\tlearn: 0.2848564\ttotal: 52.8s\tremaining: 7.61s\n",
      "874:\tlearn: 0.2847815\ttotal: 52.9s\tremaining: 7.55s\n",
      "875:\tlearn: 0.2846842\ttotal: 52.9s\tremaining: 7.49s\n",
      "876:\tlearn: 0.2845909\ttotal: 53s\tremaining: 7.43s\n",
      "877:\tlearn: 0.2844937\ttotal: 53.1s\tremaining: 7.37s\n",
      "878:\tlearn: 0.2844005\ttotal: 53.1s\tremaining: 7.31s\n",
      "879:\tlearn: 0.2842727\ttotal: 53.2s\tremaining: 7.25s\n",
      "880:\tlearn: 0.2841428\ttotal: 53.3s\tremaining: 7.2s\n",
      "881:\tlearn: 0.2840334\ttotal: 53.4s\tremaining: 7.14s\n",
      "882:\tlearn: 0.2838742\ttotal: 53.4s\tremaining: 7.08s\n",
      "883:\tlearn: 0.2838057\ttotal: 53.5s\tremaining: 7.02s\n",
      "884:\tlearn: 0.2836270\ttotal: 53.6s\tremaining: 6.96s\n",
      "885:\tlearn: 0.2834956\ttotal: 53.6s\tremaining: 6.9s\n",
      "886:\tlearn: 0.2833490\ttotal: 53.7s\tremaining: 6.84s\n",
      "887:\tlearn: 0.2832865\ttotal: 53.8s\tremaining: 6.78s\n",
      "888:\tlearn: 0.2831788\ttotal: 53.9s\tremaining: 6.72s\n",
      "889:\tlearn: 0.2831050\ttotal: 54s\tremaining: 6.67s\n",
      "890:\tlearn: 0.2829969\ttotal: 54.1s\tremaining: 6.61s\n",
      "891:\tlearn: 0.2828812\ttotal: 54.1s\tremaining: 6.55s\n",
      "892:\tlearn: 0.2827166\ttotal: 54.2s\tremaining: 6.49s\n",
      "893:\tlearn: 0.2825333\ttotal: 54.2s\tremaining: 6.43s\n",
      "894:\tlearn: 0.2824173\ttotal: 54.3s\tremaining: 6.37s\n",
      "895:\tlearn: 0.2822768\ttotal: 54.4s\tremaining: 6.31s\n",
      "896:\tlearn: 0.2821495\ttotal: 54.5s\tremaining: 6.25s\n",
      "897:\tlearn: 0.2819286\ttotal: 54.5s\tremaining: 6.19s\n",
      "898:\tlearn: 0.2817701\ttotal: 54.6s\tremaining: 6.13s\n",
      "899:\tlearn: 0.2817018\ttotal: 54.6s\tremaining: 6.07s\n",
      "900:\tlearn: 0.2816512\ttotal: 54.7s\tremaining: 6.01s\n",
      "901:\tlearn: 0.2815514\ttotal: 54.8s\tremaining: 5.95s\n",
      "902:\tlearn: 0.2814336\ttotal: 54.8s\tremaining: 5.89s\n",
      "903:\tlearn: 0.2812813\ttotal: 54.9s\tremaining: 5.83s\n",
      "904:\tlearn: 0.2811413\ttotal: 55s\tremaining: 5.77s\n",
      "905:\tlearn: 0.2810724\ttotal: 55s\tremaining: 5.71s\n",
      "906:\tlearn: 0.2808966\ttotal: 55.1s\tremaining: 5.65s\n",
      "907:\tlearn: 0.2807739\ttotal: 55.2s\tremaining: 5.59s\n",
      "908:\tlearn: 0.2806527\ttotal: 55.2s\tremaining: 5.53s\n",
      "909:\tlearn: 0.2805826\ttotal: 55.3s\tremaining: 5.47s\n",
      "910:\tlearn: 0.2804574\ttotal: 55.4s\tremaining: 5.41s\n",
      "911:\tlearn: 0.2802324\ttotal: 55.5s\tremaining: 5.35s\n",
      "912:\tlearn: 0.2800890\ttotal: 55.5s\tremaining: 5.29s\n",
      "913:\tlearn: 0.2799410\ttotal: 55.6s\tremaining: 5.23s\n",
      "914:\tlearn: 0.2798313\ttotal: 55.7s\tremaining: 5.17s\n",
      "915:\tlearn: 0.2796949\ttotal: 55.7s\tremaining: 5.11s\n",
      "916:\tlearn: 0.2796278\ttotal: 55.8s\tremaining: 5.05s\n",
      "917:\tlearn: 0.2795571\ttotal: 55.9s\tremaining: 4.99s\n",
      "918:\tlearn: 0.2793108\ttotal: 55.9s\tremaining: 4.93s\n",
      "919:\tlearn: 0.2791972\ttotal: 56s\tremaining: 4.87s\n",
      "920:\tlearn: 0.2790932\ttotal: 56.1s\tremaining: 4.81s\n",
      "921:\tlearn: 0.2789904\ttotal: 56.1s\tremaining: 4.75s\n",
      "922:\tlearn: 0.2789158\ttotal: 56.2s\tremaining: 4.69s\n",
      "923:\tlearn: 0.2788616\ttotal: 56.3s\tremaining: 4.63s\n",
      "924:\tlearn: 0.2787134\ttotal: 56.4s\tremaining: 4.57s\n",
      "925:\tlearn: 0.2785440\ttotal: 56.4s\tremaining: 4.51s\n",
      "926:\tlearn: 0.2784587\ttotal: 56.5s\tremaining: 4.45s\n",
      "927:\tlearn: 0.2783637\ttotal: 56.6s\tremaining: 4.39s\n",
      "928:\tlearn: 0.2781772\ttotal: 56.6s\tremaining: 4.33s\n",
      "929:\tlearn: 0.2779961\ttotal: 56.7s\tremaining: 4.27s\n",
      "930:\tlearn: 0.2779199\ttotal: 56.8s\tremaining: 4.21s\n",
      "931:\tlearn: 0.2777920\ttotal: 56.8s\tremaining: 4.14s\n",
      "932:\tlearn: 0.2776655\ttotal: 56.9s\tremaining: 4.08s\n",
      "933:\tlearn: 0.2775109\ttotal: 56.9s\tremaining: 4.02s\n",
      "934:\tlearn: 0.2773041\ttotal: 57s\tremaining: 3.96s\n",
      "935:\tlearn: 0.2772292\ttotal: 57.1s\tremaining: 3.9s\n",
      "936:\tlearn: 0.2771178\ttotal: 57.1s\tremaining: 3.84s\n",
      "937:\tlearn: 0.2768624\ttotal: 57.2s\tremaining: 3.78s\n",
      "938:\tlearn: 0.2767742\ttotal: 57.3s\tremaining: 3.72s\n",
      "939:\tlearn: 0.2766319\ttotal: 57.3s\tremaining: 3.66s\n",
      "940:\tlearn: 0.2765033\ttotal: 57.4s\tremaining: 3.6s\n",
      "941:\tlearn: 0.2764064\ttotal: 57.5s\tremaining: 3.54s\n",
      "942:\tlearn: 0.2762468\ttotal: 57.5s\tremaining: 3.48s\n",
      "943:\tlearn: 0.2761538\ttotal: 57.6s\tremaining: 3.42s\n",
      "944:\tlearn: 0.2759512\ttotal: 57.7s\tremaining: 3.36s\n",
      "945:\tlearn: 0.2758541\ttotal: 57.7s\tremaining: 3.29s\n",
      "946:\tlearn: 0.2757022\ttotal: 57.8s\tremaining: 3.23s\n",
      "947:\tlearn: 0.2756372\ttotal: 57.8s\tremaining: 3.17s\n",
      "948:\tlearn: 0.2754459\ttotal: 57.9s\tremaining: 3.11s\n",
      "949:\tlearn: 0.2753090\ttotal: 58s\tremaining: 3.05s\n",
      "950:\tlearn: 0.2752436\ttotal: 58s\tremaining: 2.99s\n",
      "951:\tlearn: 0.2750573\ttotal: 58.1s\tremaining: 2.93s\n",
      "952:\tlearn: 0.2749371\ttotal: 58.2s\tremaining: 2.87s\n",
      "953:\tlearn: 0.2748644\ttotal: 58.2s\tremaining: 2.81s\n",
      "954:\tlearn: 0.2747489\ttotal: 58.3s\tremaining: 2.75s\n",
      "955:\tlearn: 0.2746395\ttotal: 58.3s\tremaining: 2.69s\n",
      "956:\tlearn: 0.2744461\ttotal: 58.4s\tremaining: 2.62s\n",
      "957:\tlearn: 0.2743435\ttotal: 58.5s\tremaining: 2.56s\n",
      "958:\tlearn: 0.2741763\ttotal: 58.5s\tremaining: 2.5s\n",
      "959:\tlearn: 0.2739694\ttotal: 58.6s\tremaining: 2.44s\n",
      "960:\tlearn: 0.2737893\ttotal: 58.7s\tremaining: 2.38s\n",
      "961:\tlearn: 0.2737153\ttotal: 58.7s\tremaining: 2.32s\n",
      "962:\tlearn: 0.2736242\ttotal: 58.8s\tremaining: 2.26s\n",
      "963:\tlearn: 0.2734863\ttotal: 58.8s\tremaining: 2.2s\n",
      "964:\tlearn: 0.2733658\ttotal: 58.9s\tremaining: 2.14s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "965:\tlearn: 0.2732393\ttotal: 59s\tremaining: 2.08s\n",
      "966:\tlearn: 0.2731417\ttotal: 59s\tremaining: 2.01s\n",
      "967:\tlearn: 0.2731097\ttotal: 59.1s\tremaining: 1.95s\n",
      "968:\tlearn: 0.2729932\ttotal: 59.2s\tremaining: 1.89s\n",
      "969:\tlearn: 0.2728179\ttotal: 59.2s\tremaining: 1.83s\n",
      "970:\tlearn: 0.2726408\ttotal: 59.3s\tremaining: 1.77s\n",
      "971:\tlearn: 0.2726015\ttotal: 59.4s\tremaining: 1.71s\n",
      "972:\tlearn: 0.2724664\ttotal: 59.5s\tremaining: 1.65s\n",
      "973:\tlearn: 0.2722965\ttotal: 59.5s\tremaining: 1.59s\n",
      "974:\tlearn: 0.2721148\ttotal: 59.6s\tremaining: 1.53s\n",
      "975:\tlearn: 0.2720205\ttotal: 59.6s\tremaining: 1.47s\n",
      "976:\tlearn: 0.2719021\ttotal: 59.7s\tremaining: 1.41s\n",
      "977:\tlearn: 0.2717926\ttotal: 59.8s\tremaining: 1.34s\n",
      "978:\tlearn: 0.2717440\ttotal: 59.8s\tremaining: 1.28s\n",
      "979:\tlearn: 0.2716346\ttotal: 59.9s\tremaining: 1.22s\n",
      "980:\tlearn: 0.2715528\ttotal: 60s\tremaining: 1.16s\n",
      "981:\tlearn: 0.2714700\ttotal: 1m\tremaining: 1.1s\n",
      "982:\tlearn: 0.2713239\ttotal: 1m\tremaining: 1.04s\n",
      "983:\tlearn: 0.2712088\ttotal: 1m\tremaining: 978ms\n",
      "984:\tlearn: 0.2710744\ttotal: 1m\tremaining: 917ms\n",
      "985:\tlearn: 0.2709952\ttotal: 1m\tremaining: 856ms\n",
      "986:\tlearn: 0.2709111\ttotal: 1m\tremaining: 795ms\n",
      "987:\tlearn: 0.2707291\ttotal: 1m\tremaining: 734ms\n",
      "988:\tlearn: 0.2706930\ttotal: 1m\tremaining: 673ms\n",
      "989:\tlearn: 0.2706450\ttotal: 1m\tremaining: 612ms\n",
      "990:\tlearn: 0.2705224\ttotal: 1m\tremaining: 551ms\n",
      "991:\tlearn: 0.2704186\ttotal: 1m\tremaining: 490ms\n",
      "992:\tlearn: 0.2703220\ttotal: 1m\tremaining: 428ms\n",
      "993:\tlearn: 0.2701662\ttotal: 1m\tremaining: 367ms\n",
      "994:\tlearn: 0.2700228\ttotal: 1m\tremaining: 306ms\n",
      "995:\tlearn: 0.2699036\ttotal: 1m\tremaining: 245ms\n",
      "996:\tlearn: 0.2697107\ttotal: 1m 1s\tremaining: 184ms\n",
      "997:\tlearn: 0.2695853\ttotal: 1m 1s\tremaining: 122ms\n",
      "998:\tlearn: 0.2694921\ttotal: 1m 1s\tremaining: 61.2ms\n",
      "999:\tlearn: 0.2693566\ttotal: 1m 1s\tremaining: 0us\n",
      "f1:  0.8407245355036242\n"
     ]
    }
   ],
   "source": [
    "params ={\n",
    "    'depth': 7,\n",
    "    'iterations': 1000,\n",
    "    'learning_rate': 0.05,\n",
    "    'l2_leaf_reg': 0.01\n",
    "    #'use_best_model': True\n",
    "}\n",
    "model = CatBoostClassifier(**params)\n",
    "#print('cv accuracy: ', cross_val_score(model, train_data, train_labels, scoring='accuracy', cv = 10).mean())\n",
    "model.fit(train_data, train_labels)\n",
    "predictions_RF = model.predict(val_data)\n",
    "print('f1: ', f1_score(model.predict(val_data), val_labels, average='macro'))\n",
    "#0.826"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "cv_score = cross_validate(model, train_data, train_labels, cv=4, scoring=[\"f1_micro\", \"f1_macro\", \"f1_weighted\", \"accuracy\"], n_jobs=-1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'fit_time': array([220.22288537, 224.61137986, 224.77031326, 223.73598695]),\n",
       " 'score_time': array([0.31636429, 0.10628986, 0.0441196 , 0.31034851]),\n",
       " 'test_f1_micro': array([0.85506667, 0.85186667, 0.85586667, 0.85026667]),\n",
       " 'test_f1_macro': array([0.85499771, 0.8516027 , 0.85539298, 0.85014932]),\n",
       " 'test_f1_weighted': array([0.85499771, 0.8516027 , 0.85539298, 0.85014932]),\n",
       " 'test_accuracy': array([0.85506667, 0.85186667, 0.85586667, 0.85026667])}"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cv_score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Feature importance (XGB)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "importance = model.feature_importances_.squeeze()\n",
    "columns = train_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'u_0': 0.02138557,\n",
       " 'g_0': 0.05248179,\n",
       " 'r_0': 0.030337384,\n",
       " 'i_0': 0.037116125,\n",
       " 'z_0': 0.048464473,\n",
       " 'clean': 0.089074925,\n",
       " 'rowc': 0.0062960708,\n",
       " 'colc': 0.006659851,\n",
       " 'rowv': 0.008507476,\n",
       " 'colv': 0.011087694,\n",
       " 'u_1': 0.0064582834,\n",
       " 'g_1': 0.006460147,\n",
       " 'r_1': 0.006756885,\n",
       " 'i_1': 0.0066626086,\n",
       " 'z_1': 0.006719044,\n",
       " 'u_2': 0.006486106,\n",
       " 'g_2': 0.0070276856,\n",
       " 'r_2': 0.0066424995,\n",
       " 'i_2': 0.0069234343,\n",
       " 'z_2': 0.007178054,\n",
       " 'u_3': 0.018848326,\n",
       " 'g_3': 0.042213615,\n",
       " 'r_3': 0.020207489,\n",
       " 'i_3': 0.026257364,\n",
       " 'z_3': 0.013320675,\n",
       " 'u_4': 0.00704155,\n",
       " 'g_4': 0.0109742265,\n",
       " 'r_4': 0.0103679625,\n",
       " 'i_4': 0.008845788,\n",
       " 'z_4': 0.0070118206,\n",
       " 'u_5': 0.006950821,\n",
       " 'g_5': 0.010223589,\n",
       " 'r_5': 0.009369826,\n",
       " 'i_5': 0.008519645,\n",
       " 'z_5': 0.007679118,\n",
       " 'u_6': 0.062195834,\n",
       " 'g_6': 0.18332422,\n",
       " 'r_6': 0.011770444,\n",
       " 'i_6': 0.019977443,\n",
       " 'z_6': 0.023038926,\n",
       " 'cluster_u': 0.0065962914,\n",
       " 'cluster_g': 0.0061175167,\n",
       " 'cluster_r': 0.0059020794,\n",
       " 'cluster_i': 0.006437174,\n",
       " 'cluster_z': 0.005951612,\n",
       " 'cluster_0': 0.05057969,\n",
       " 'cluster_1': 0.0059606335,\n",
       " 'cluster_2': 0.0058539873,\n",
       " 'cluster_3': 0.017890662,\n",
       " 'cluster_4': 0.0018455617,\n",
       " 'cluster_5': 0.0}"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res = dict(zip(columns, importance)) \n",
    "res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[12248,   872,   213],\n",
       "       [  672,  3653,   675],\n",
       "       [  328,   228,  4444]], dtype=int64)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(val_labels,model.predict(val_data))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
